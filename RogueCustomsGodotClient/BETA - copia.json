{
  "Version": "1.5",
  "Name": "BETA",
  "Author": "Shiigu",
  "WelcomeMessage": "WelcomeMessage",
  "EndingMessage": "EndingMessage",
  "DefaultLocale": "en",
  "Locales": [
    {
      "Language": "en",
      "LocaleStrings": [
        {
          "Key": "DungeonName",
          "Value": "Den of the Betas"
        },
        {
          "Key": "WelcomeMessage",
          "Value": "Welcome to this test roguelike!\r\r\n\r\r\nThis was mostly made to showcase the Dungeon Editor\u0027s capabilities, so gameplay is very basic.\r\r\n\r\r\nHave fun, and provide feedback at the end!"
        },
        {
          "Key": "EndingMessage",
          "Value": "WELL DONE!\r\n\r\nYOU\u0027VE BEATEN THE DEN OF THE BETAS!\r\n\r\nIf you wish to support this project, you can help here:\r\n\r\nhttps://github.com/Shiigu/RogueCustoms"
        },
        {
          "Key": "YesButtonText",
          "Value": "YES"
        },
        {
          "Key": "NoButtonText",
          "Value": "NO"
        },
        {
          "Key": "FloorName",
          "Value": "{DungeonName} - FLOOR {FloorLevel}"
        },
        {
          "Key": "NewTurn",
          "Value": "----------TURN {TurnCount}----------"
        },
        {
          "Key": "FloorEnter",
          "Value": "Entering Floor {FloorLevel}..."
        },
        {
          "Key": "FloorLeave",
          "Value": "Leaving Floor {FloorLevel}..."
        },
        {
          "Key": "CharacterSwitchedPlacesWithPlayer",
          "Value": "{CharacterName} let {PlayerName} pass."
        },
        {
          "Key": "CharacterGotAnItem",
          "Value": "{CharacterName} got an {ItemName} from {SourceName}."
        },
        {
          "Key": "PlayerPutItemOnBag",
          "Value": "{CharacterName} put {ItemName} on the bag."
        },
        {
          "Key": "PlayerPutItemOnFloor",
          "Value": "{CharacterName} put {ItemName} on the floor."
        },
        {
          "Key": "PlayerEquippedItem",
          "Value": "{CharacterName} equips {ItemName}."
        },
        {
          "Key": "NPCPickItem",
          "Value": "{CharacterName} picked up {ItemName}."
        },
        {
          "Key": "NPCPutItemOnFloor",
          "Value": "{CharacterName} dropped {ItemName} on the floor."
        },
        {
          "Key": "NPCItemCannotBePutOnFloor",
          "Value": "{ItemName} was destroyed!"
        },
        {
          "Key": "InventoryIsFull",
          "Value": "{CharacterName} cannot pick up {ItemName}. Inventory is full."
        },
        {
          "Key": "TileIsOccupied",
          "Value": "{CharacterName} cannot drop {ItemName}. Tile is occupied."
        },
        {
          "Key": "NoTarget",
          "Value": "But there was no target!"
        },
        {
          "Key": "CannotBeUsed",
          "Value": "CANNOT BE USED"
        },
        {
          "Key": "OnCooldown",
          "Value": "ON COOLDOWN:\n{CurrentCooldown} TURNS LEFT"
        },
        {
          "Key": "MaximumUses",
          "Value": "REACHED MAXIMUM USES"
        },
        {
          "Key": "RemainingUseCount",
          "Value": "{RemainingUses} USES LEFT"
        },
        {
          "Key": "TargetIsTooClose",
          "Value": "TARGET IS TOO CLOSE"
        },
        {
          "Key": "TargetIsTooFarAway",
          "Value": "TARGET IS TOO FAR AWAY"
        },
        {
          "Key": "TargetIsOfWrongFaction",
          "Value": "TARGET MUST BE {FactionTargets}"
        },
        {
          "Key": "TargetTypeSelf",
          "Value": "SELF"
        },
        {
          "Key": "TargetTypeAlly",
          "Value": "ALLY"
        },
        {
          "Key": "TargetTypeNeutral",
          "Value": "NEUTRAL"
        },
        {
          "Key": "TargetTypeEnemy",
          "Value": "ENEMY"
        },
        {
          "Key": "TargetTypeTile",
          "Value": "TILE"
        },
        {
          "Key": "TargetDoesNotFulfillConditions",
          "Value": "TARGET DOES NOT FULFILL CONDITIONS"
        },
        {
          "Key": "NotEnoughMP",
          "Value": "NOT ENOUGH {MPStat}"
        },
        {
          "Key": "RequiresATarget",
          "Value": "REQUIRES A TARGET"
        },
        {
          "Key": "SelfRange",
          "Value": "Range: Own tile"
        },
        {
          "Key": "MeleeRange",
          "Value": "Range: Melee"
        },
        {
          "Key": "SelfOrMeleeRange",
          "Value": "Range: Own tile or Melee"
        },
        {
          "Key": "TilesRange",
          "Value": "Range: {TilesRange} tiles"
        },
        {
          "Key": "SelfOrTilesRange",
          "Value": "Range: Own tile or {TilesRange} tiles"
        },
        {
          "Key": "MPCost",
          "Value": "{MPStat} Cost: {MPCost}"
        },
        {
          "Key": "FromSource",
          "Value": "(From {SourceName})"
        },
        {
          "Key": "SightRangeStatFullMap",
          "Value": "Full map"
        },
        {
          "Key": "SightRangeStatFullRoom",
          "Value": "Full room"
        },
        {
          "Key": "SightRangeStatFlatNumber",
          "Value": "{SightRange} tiles"
        },
        {
          "Key": "InventorySizeStatFlatNumber",
          "Value": "{InventorySize} items"
        },
        {
          "Key": "TileTypeFloor",
          "Value": "Floor"
        },
        {
          "Key": "TileTypeWall",
          "Value": "Wall"
        },
        {
          "Key": "TileTypeHallway",
          "Value": "Hallway"
        },
        {
          "Key": "TileTypeStairs",
          "Value": "Stairs"
        },
        {
          "Key": "TileTypeEmpty",
          "Value": "Empty"
        },
        {
          "Key": "CharacterLevelsUpMessage",
          "Value": "{CharacterName} has reached Level {Level}!"
        },
        {
          "Key": "CharacterLevelsUpHeader",
          "Value": "CONGRATULATIONS!"
        },
        {
          "Key": "CharacterHPStat",
          "Value": "HP"
        },
        {
          "Key": "CharacterMPStat",
          "Value": "MP"
        },
        {
          "Key": "CharacterAttackStat",
          "Value": "Attack"
        },
        {
          "Key": "CharacterDefenseStat",
          "Value": "Defense"
        },
        {
          "Key": "CharacterMovementStat",
          "Value": "Movement"
        },
        {
          "Key": "CharacterSightRangeStat",
          "Value": "Sight Range"
        },
        {
          "Key": "CharacterHPRegenerationStat",
          "Value": "HP Regeneration"
        },
        {
          "Key": "CharacterMPRegenerationStat",
          "Value": "MP Regeneration"
        },
        {
          "Key": "CharacterHungerStat",
          "Value": "Hunger"
        },
        {
          "Key": "CharacterInventorySizeStat",
          "Value": "Inventory Size"
        },
        {
          "Key": "CharacterEvasionStat",
          "Value": "Evasion"
        },
        {
          "Key": "CharacterAccuracyStat",
          "Value": "Accuracy"
        },
        {
          "Key": "CharacterDamageStat",
          "Value": "Damage"
        },
        {
          "Key": "CharacterMitigationStat",
          "Value": "Mitigation"
        },
        {
          "Key": "CharacterTakesDamage",
          "Value": "{CharacterName} took {DamageDealt} {ElementName} damage."
        },
        {
          "Key": "CharacterHealsSomeHP",
          "Value": "{CharacterName} healed {HealAmount} HP!"
        },
        {
          "Key": "CharacterHealsAllHP",
          "Value": "{CharacterName} is now at maximum HP!"
        },
        {
          "Key": "CharacterTakesDamageFromHunger",
          "Value": "{CharacterName} took {DamageDealt} {CharacterHPStat} of damage from {CharacterHungerStat}."
        },
        {
          "Key": "CharacterLosesMP",
          "Value": "{CharacterName} lost {BurnedMP} {CharacterMPStat}."
        },
        {
          "Key": "CharacterRecoversSomeMP",
          "Value": "{CharacterName} recovered {ReplenishAmount} {CharacterMPStat}!"
        },
        {
          "Key": "CharacterRecoversAllMP",
          "Value": "{CharacterName} is now at maximum {CharacterMPStat}!"
        },
        {
          "Key": "CharacterLosesHunger",
          "Value": "{CharacterName} lost {LostHunger} {CharacterHungerStat}."
        },
        {
          "Key": "CharacterRecoversSomeHunger",
          "Value": "{CharacterName} recovered {ReplenishAmount} {CharacterHungerStat}!"
        },
        {
          "Key": "CharacterRecoversAllHunger",
          "Value": "{CharacterName} is now at maximum {CharacterHungerStat}!"
        },
        {
          "Key": "CharacterGainsExperience",
          "Value": "{CharacterName} gained {Amount} experience points."
        },
        {
          "Key": "CharacterGotStatused",
          "Value": "{CharacterName} is now {StatusName}!"
        },
        {
          "Key": "CharacterStatusGotRefreshed",
          "Value": "{CharacterName}\u0027s {StatusName} has been reapplied!"
        },
        {
          "Key": "CharacterIsNoLongerStatused",
          "Value": "{CharacterName} is no longer {StatusName}!"
        },
        {
          "Key": "CharacterStatGotBuffed",
          "Value": "{CharacterName}\u0027s {StatName} increased by {Amount}."
        },
        {
          "Key": "CharacterStatGotNerfed",
          "Value": "{CharacterName}\u0027s {StatName} decreased by {Amount}."
        },
        {
          "Key": "CharacterStatGotNeutralized",
          "Value": "{CharacterName}\u0027s {StatName} is back to normal."
        },
        {
          "Key": "CharacterWasTeleported",
          "Value": "{CharacterName} has teleported somewhere else."
        },
        {
          "Key": "CharacterStealsItem",
          "Value": "{SourceName} has stolen {ItemName} from {TargetName}!"
        },
        {
          "Key": "CharacterConvertedTile",
          "Value": "{CharacterName} has created a {TileType}!"
        },
        {
          "Key": "CharacterCreatedATrap",
          "Value": "{CharacterName} has deployed a {TrapName}!"
        },
        {
          "Key": "CharacterCreatedAnNPC",
          "Value": "{NPCName} has been summoned by {CharacterName}!"
        },
        {
          "Key": "CharacterRevivedAnNPC",
          "Value": "{NPCName} has been revived by {CharacterName}!"
        },
        {
          "Key": "CharacterBumpedDoor",
          "Value": "{CharacterName} has bumped into the {DoorName}."
        },
        {
          "Key": "CharacterUnlockedDoor",
          "Value": "{CharacterName} has unlocked the {DoorName}!"
        },
        {
          "Key": "CharacterLearnedScript",
          "Value": "{CharacterName} has learned {ScriptName}!"
        },
        {
          "Key": "CharacterForgotScript",
          "Value": "{CharacterName} has forgotten {ScriptName}."
        },
        {
          "Key": "StairsGotRevealed",
          "Value": "The stairs have been revealed!"
        },
        {
          "Key": "KeyDescription",
          "Value": "A key.\n\nUse it on a matching door to permanently open it.\n\nThe Key is destroyed when all matching doors are open, or when you enter a new Floor.\n\n(Keys do not occupy Inventory space)"
        },
        {
          "Key": "DoorDescription",
          "Value": "A Door that seals access to something important.\n\nUse a matching Key to permanently open it."
        },
        {
          "Key": "UnlockDoorName",
          "Value": "Unlock Door"
        },
        {
          "Key": "UnlockDoorDescription",
          "Value": "Try to put the Key into the Door\u0027s Lockset to open it.\n\nWorks only if the Key and Door match."
        },
        {
          "Key": "AttackCriticalHitText",
          "Value": "CRITICAL HIT!"
        },
        {
          "Key": "AttackMissedText",
          "Value": "But it missed!"
        },
        {
          "Key": "AttackDealtNoDamageText",
          "Value": "The attack dealt no damage..."
        },
        {
          "Key": "ItemSteppedText",
          "Value": "{CharacterName} stepped over {ItemName}."
        },
        {
          "Key": "TileIsOccupied",
          "Value": "{CharacterName} cannot drop {ItemName}. Tile is occupied."
        },
        {
          "Key": "MonsterHouseWarningLogMessage",
          "Value": "{CharacterName} has stumbled with a Monster House!"
        },
        {
          "Key": "MonsterHouseWarningMessage",
          "Value": "It\u0027s a Monster House!"
        },
        {
          "Key": "MonsterHouseWarningHeader",
          "Value": "OH NO!"
        },
        {
          "Key": "CharacterMaxHPStat",
          "Value": "Max HP"
        },
        {
          "Key": "CharacterMaxMPStat",
          "Value": "Max MP"
        },
        {
          "Key": "Floor1WelcomeText",
          "Value": "Welcome to this game!\n\nFind the stairs to reach the next floor."
        },
        {
          "Key": "Floor2WelcomeText",
          "Value": "This is what I\u0027d call a \u0022Rest floor\u0022\n\nNo enemies will appear here.\n\nRestock all you want until you go to the stairs."
        },
        {
          "Key": "Floor2WarningText",
          "Value": "WARNING: You CANNOT regenerate HP while in this floor."
        },
        {
          "Key": "Floor5WelcomeText",
          "Value": "You encountered the Mini-Boss!\r\n\r\nThis one\u0027s extra tough, so be wary!"
        },
        {
          "Key": "Floor5WelcomeText2",
          "Value": "Defeat the mini-boss to reveal the stairs and continue!"
        },
        {
          "Key": "PlayerFactionName",
          "Value": "Player"
        },
        {
          "Key": "PlayerFactionDescription",
          "Value": "The faction representing you. Your objective? Beat the dungeon."
        },
        {
          "Key": "AlliedNPCsFactionName",
          "Value": "Allied NPCs"
        },
        {
          "Key": "AlliesNPCsFactionDescription",
          "Value": "A group of \u0027helpful\u0027 NPCs that might give you useful information."
        },
        {
          "Key": "MeleeEnemiesFactionName",
          "Value": "Melee Enemies"
        },
        {
          "Key": "MeleeEnemiesFactionDescription",
          "Value": "The enemies that wield melee weapons.\n\nMay retaliate against their ranged brethren if they attack them."
        },
        {
          "Key": "RangedEnemiesFactionName",
          "Value": "Ranged Enemies"
        },
        {
          "Key": "RangedEnemiesFactionDescription",
          "Value": "The enemies that wield ranges weapons.\n\nMay retaliate against their melee brethren if they attack them."
        },
        {
          "Key": "EasyPlayerName",
          "Value": "Easy Player"
        },
        {
          "Key": "EasyPlayerDescription",
          "Value": "This is you, the player.\n\nYou have it easier than others.\nYour goal is to reach the end of the dungeon alive."
        },
        {
          "Key": "NormalPlayerName",
          "Value": "Normal Player"
        },
        {
          "Key": "NormalPlayerDescription",
          "Value": "This is you, the player.\n\nYour goal is to reach the end of the dungeon alive."
        },
        {
          "Key": "HardPlayerName",
          "Value": "Hard Player"
        },
        {
          "Key": "HardPlayerDescription",
          "Value": "This is you, the player.\n\nYou have it harder than others.\nYour goal is to reach the end of the dungeon alive."
        },
        {
          "Key": "PlayerDeathText",
          "Value": "{this} has died!"
        },
        {
          "Key": "PlayerDeathMessageBoxHeader",
          "Value": "OH NO!"
        },
        {
          "Key": "PlayerDeathMessageBoxText",
          "Value": "YOU HAVE DIED!"
        },
        {
          "Key": "MeleeEnemyName",
          "Value": "Melee Enemy"
        },
        {
          "Key": "MeleeEnemyDescription",
          "Value": "A bad guy that can punch you. Sometimes he instead mocks you by sticking his tongue."
        },
        {
          "Key": "MeleeEnemyStickTongueText",
          "Value": "{this} sticks his tongue at {target}."
        },
        {
          "Key": "RangedEnemyName",
          "Value": "Ranged Enemy"
        },
        {
          "Key": "RangedEnemyDescription",
          "Value": "A bad guy that can throw javelins at you. Sometimes they are envenomed."
        },
        {
          "Key": "ThiefName",
          "Value": "Thief"
        },
        {
          "Key": "ThiefDescription",
          "Value": "A bad guy that can punch you. Likes to steal an item, but can only carry one at a time."
        },
        {
          "Key": "ThiefStealAttackText",
          "Value": "{this} tries to do a five-finger discount to {target}."
        },
        {
          "Key": "ThiefStealSuccessText",
          "Value": "{this} laughs at {target}\u0027s predicament."
        },
        {
          "Key": "ThiefStealFailureText",
          "Value": "But {this} couldn\u0027t take anything!"
        },
        {
          "Key": "EnemyDeathText",
          "Value": "The evil {this} has died."
        },
        {
          "Key": "MeleeAllyName",
          "Value": "Melee Ally"
        },
        {
          "Key": "MeleeAllyDescription",
          "Value": "A good guy that can throw punches."
        },
        {
          "Key": "MeleeAllyDeclareText",
          "Value": "{this} declares that {target}\u0027s days are counted."
        },
        {
          "Key": "AllyDeathText",
          "Value": "The well-natured {this} has died."
        },
        {
          "Key": "BossName",
          "Value": "Boss"
        },
        {
          "Key": "BossDescription",
          "Value": "The big bad guy of the dungeon. Kill him to get out of here!"
        },
        {
          "Key": "BossAwaitText",
          "Value": "The {this} waits for {target} to get closer."
        },
        {
          "Key": "BossDeathText",
          "Value": "CONCAT(\u0022THE NEFARIOUS \u0022, UPPER(\u0022{this}\u0022), \u0022 NO LONGER EXISTS!\u0022)"
        },
        {
          "Key": "BareFistsName",
          "Value": "Bare Fists"
        },
        {
          "Key": "BareFistsDescription",
          "Value": "Good \u0027ol fistcuffs when nothing else works."
        },
        {
          "Key": "MeleeWeaponAttackName",
          "Value": "Melee Weapon Attack"
        },
        {
          "Key": "RangedWeaponAttackName",
          "Value": "Ranged Weapon Attack"
        },
        {
          "Key": "BareFistsAttackDescription",
          "Value": "Deals normal damage with no secondary effect."
        },
        {
          "Key": "BareFistsAttackText",
          "Value": "{source} tries to punch {target}."
        },
        {
          "Key": "FailedAttackText",
          "Value": "But it failed!"
        },
        {
          "Key": "ClothArmorName",
          "Value": "Cloth"
        },
        {
          "Key": "ClothArmorDescription",
          "Value": "Very basic and lightweight armor."
        },
        {
          "Key": "SkirtName",
          "Value": "Skirt"
        },
        {
          "Key": "SkirtDescription",
          "Value": "How are you reading this?"
        },
        {
          "Key": "HealingPotionName",
          "Value": "Healing Potion"
        },
        {
          "Key": "HealingPotionDescription",
          "Value": "The quintessential healing item.\r\n\r\nHeals up to 2d4 HP, then it disappears."
        },
        {
          "Key": "PotionOfStrengthName",
          "Value": "Potion of Strength"
        },
        {
          "Key": "PotionOfStrengthDescription",
          "Value": "Exactly like the Healing Potion but completely different.\n\nWhen used, it applies Invigorated (\u002B10% Attack) for 75 turns, then it disappears."
        },
        {
          "Key": "AntidoteName",
          "Value": "Antidote"
        },
        {
          "Key": "AntidoteDescription",
          "Value": "For when you\u0027re feeling bad.\n\nWhen used, it cures Poisoning and then it disappears."
        },
        {
          "Key": "ObjectSteppedText",
          "Value": "{target} stepped over {this}."
        },
        {
          "Key": "ObjectEquippedText",
          "Value": "{target} equips the {this}."
        },
        {
          "Key": "ObjectDrunkText",
          "Value": "{target} drinks the {this}."
        },
        {
          "Key": "ObjectDisappearedText",
          "Value": "{this} disappeared."
        },
        {
          "Key": "ObjectNotUsedText",
          "Value": "Or not. It would have no effect..."
        },
        {
          "Key": "ObjectNotActivatedText",
          "Value": "{this} failed to activate!"
        },
        {
          "Key": "SwordName",
          "Value": "Sword"
        },
        {
          "Key": "SwordDescription",
          "Value": "A reliable tool for cutting through enemies."
        },
        {
          "Key": "SwordAttackDescription",
          "Value": "Deals normal damage with no secondary effect."
        },
        {
          "Key": "SwordAttackText",
          "Value": "{source} swings the {this} at {target}."
        },
        {
          "Key": "SwordAllInAttackName",
          "Value": "All In"
        },
        {
          "Key": "SwordAllInAttackDescription",
          "Value": "Deals double damage with no secondary effect.\r\n\r\nTotally not ripped from Divinity: Original Sin II"
        },
        {
          "Key": "SwordAllInAttackText",
          "Value": "{source} goes full-might with the {this} at {target}!"
        },
        {
          "Key": "PistolName",
          "Value": "Pistol"
        },
        {
          "Key": "PistolDescription",
          "Value": "The strongest weapon you can find in this dungeon."
        },
        {
          "Key": "PistolMeleeAttackDescription",
          "Value": "Deals very weak damage with no secondary effect."
        },
        {
          "Key": "PistolMeleeAttackText",
          "Value": "{source} hits {target} with the {this}\u0027s stock."
        },
        {
          "Key": "PistolRangedAttackDescription",
          "Value": "Deals normal damage with no secondary effect."
        },
        {
          "Key": "PistolRangedAttackText",
          "Value": "{source} shoots at {target} with the {this}."
        },
        {
          "Key": "LeatherName",
          "Value": "Leather"
        },
        {
          "Key": "LeatherDescription",
          "Value": "Comfortable but fairly effective protection."
        },
        {
          "Key": "PlateName",
          "Value": "Plate"
        },
        {
          "Key": "PlateDescription",
          "Value": "The strongest source of protection in this dungeon."
        },
        {
          "Key": "JavelinName",
          "Value": "Javelin"
        },
        {
          "Key": "JavelinDescription",
          "Value": "Ranged Enemies love it. Players and Melee Allies hate it."
        },
        {
          "Key": "JavelinMeleeAttackDescription",
          "Value": "Deals half of damage with no secondary effect."
        },
        {
          "Key": "JavelinMeleeAttackText",
          "Value": "{source} tries to stab {target} with the {this}."
        },
        {
          "Key": "JavelinNormalRangedAttackDescription",
          "Value": "Deals normal damage with no secondary effect."
        },
        {
          "Key": "JavelinNormalRangedAttackText",
          "Value": "{source} throws a {this} at {target}."
        },
        {
          "Key": "JavelinEnvenomedRangedAttackName",
          "Value": "Envenomed Ranged Weapon Attack"
        },
        {
          "Key": "JavelinEnvenomedRangedAttackDescription",
          "Value": "Deals half of damage with a 50% chance to Poison the target."
        },
        {
          "Key": "JavelinEnvenomedRangedAttackText",
          "Value": "{source} envenoms a {this} and throws it at {target}."
        },
        {
          "Key": "ScrollOfDestructionName",
          "Value": "Scroll of Destruction"
        },
        {
          "Key": "ScrollOfDestructionDescription",
          "Value": "A single-use scroll that instantly kills the target.\n\n(Must be used from the list of Actions)"
        },
        {
          "Key": "ScrollOfDestructionAttackDescription",
          "Value": "A single-use scroll that instantly kills the target."
        },
        {
          "Key": "ScrollOfDestructionAttackText",
          "Value": "{source} looks at {target} and reads the {this}."
        },
        {
          "Key": "MagicStaffName",
          "Value": "Magic Staff"
        },
        {
          "Key": "MagicStaffDescription",
          "Value": "A mystical staff with very versatile spells."
        },
        {
          "Key": "StaffOfMagusName",
          "Value": "Staff Of Magus"
        },
        {
          "Key": "StaffOfMagusDescription",
          "Value": "Deals normal damage with no secondary effect.\r\r\n\r\r\nTotally not ripped from Divinity: Original Sin II"
        },
        {
          "Key": "StaffOfMagusAttackText",
          "Value": "{source} uses Staff of Magus on {target}."
        },
        {
          "Key": "FireballName",
          "Value": "Fireball"
        },
        {
          "Key": "FireballDescription",
          "Value": "Hurls a ball of fire at the target. Has a 50% chance to Burn for 40 turns."
        },
        {
          "Key": "FireballAttackText",
          "Value": "{source} uses Fireball on {target}."
        },
        {
          "Key": "IceballName",
          "Value": "Iceball"
        },
        {
          "Key": "IceballDescription",
          "Value": "Hurls a ball of ice at the target. Has a 25% chance to Freeze for 3 turns, preventing enemy movement."
        },
        {
          "Key": "IceballAttackText",
          "Value": "{source} uses Iceball on {target}."
        },
        {
          "Key": "HealName",
          "Value": "Heal"
        },
        {
          "Key": "HealDescription",
          "Value": "Heals up to 2d6 damage to the target.\r\nCan be used on self."
        },
        {
          "Key": "HealAttackText",
          "Value": "{source} uses Heal on {target}."
        },
        {
          "Key": "SpikeTrapName",
          "Value": "Spike Trap"
        },
        {
          "Key": "SpikeTrapDescription",
          "Value": "May deal 1 damage, regardless of Armor, when stepped on. May break afterwards."
        },
        {
          "Key": "WonderTileName",
          "Value": "Wonder Tile"
        },
        {
          "Key": "WonderTileDescription",
          "Value": "Removes all stat alterations, both positive and negative, when stepped on."
        },
        {
          "Key": "WonderTileFailedText",
          "Value": "But nothing happened."
        },
        {
          "Key": "IceTrapName",
          "Value": "Ice Trap"
        },
        {
          "Key": "IceTrapDescription",
          "Value": "Has a 30% chance to Freeze the target, when stepped on, and breaks if it does."
        },
        {
          "Key": "TeleportTrapName",
          "Value": "Teleport Trap"
        },
        {
          "Key": "TeleportTrapDescription",
          "Value": "Teleports characters that step on it. May break afterwards."
        },
        {
          "Key": "InvigoratedName",
          "Value": "Invigorated"
        },
        {
          "Key": "InvigoratedDescription",
          "Value": "Attack increased!"
        },
        {
          "Key": "PoisonedName",
          "Value": "Poisoned"
        },
        {
          "Key": "PoisonedDescription",
          "Value": "Taking damage every 28 turns"
        },
        {
          "Key": "PoisonedText",
          "Value": "Poison is coursing through {target}\u0027s body."
        },
        {
          "Key": "BurningName",
          "Value": "Burning"
        },
        {
          "Key": "BurningDescription",
          "Value": "Taking damage every 5 turns"
        },
        {
          "Key": "BurnedText",
          "Value": "{target} is affected by the burn."
        },
        {
          "Key": "FrozenName",
          "Value": "Frozen"
        },
        {
          "Key": "FrozenDescription",
          "Value": "Cannot do anything"
        },
        {
          "Key": "FrozenText",
          "Value": "{target} cannot move due to the freezing."
        },
        {
          "Key": "RegenBlockName",
          "Value": "Lacking Regeneration"
        },
        {
          "Key": "RegenBlockDescription",
          "Value": "Lost all natural HP regeneration"
        },
        {
          "Key": "Floor2HealthWarningText",
          "Value": "You seem to be wounded, but... you can keep going.\n\nYou could consider healing."
        },
        {
          "Key": "Floor2HealthWarningHeader",
          "Value": "Warning"
        },
        {
          "Key": "Floor5BossDefeatedHeader",
          "Value": "CONGRATULATIONS!"
        },
        {
          "Key": "Floor5BossDefeatedText",
          "Value": "You\u0027ve defeated the Boss! Now you can leave!\r\n\r\nDead Enemies Counter: [EnemiesDefeated]"
        },
        {
          "Key": "MagicPotionName",
          "Value": "Magic Potion"
        },
        {
          "Key": "MagicPotionDescription",
          "Value": "A mysterious beverage oozing with magic.\r\n\r\nHeals up to 1d4 MP, then it disappears."
        },
        {
          "Key": "ThiefSandAttackText",
          "Value": "{this} tries to throw sand at {target}\u0027s eyes."
        },
        {
          "Key": "WaveHandsName",
          "Value": "Wave Hand"
        },
        {
          "Key": "WaveHandsDescription",
          "Value": "Wave your hand at a friend like the good player you are."
        },
        {
          "Key": "SourceWaveHandText",
          "Value": "{source} waves a hand at {target}."
        },
        {
          "Key": "TargetWaveHandText",
          "Value": "{target} waves it back at {source}."
        },
        {
          "Key": "ThiefSpawnText",
          "Value": "Some sneaky being has entered this floor."
        },
        {
          "Key": "SandAttackName",
          "Value": "Sand Attack"
        },
        {
          "Key": "InvisibilityPotionName",
          "Value": "Invisibility Potion"
        },
        {
          "Key": "InvisibilityPotionDescription",
          "Value": "A bottle whose contents you can\u0027t see.\n\nDrinking it makes you invisible for up to 20 turns.\n\n(Wears off prematurely if you attack or get attacked)"
        },
        {
          "Key": "InvisibleName",
          "Value": "Invisible"
        },
        {
          "Key": "InvisibleDescription",
          "Value": "Can\u0027t be seen. Wears off prematurely if you attack or get attacked."
        },
        {
          "Key": "DisarmedSpikeTrapName",
          "Value": "Disarmed Spike Trap"
        },
        {
          "Key": "DisarmedSpikeTrapDescription",
          "Value": "A Disarmed Spike Trap.\n\nUse it on a tile to arm it. It will be initially visible to only you and your allies, but beware! It does not know of allegiances."
        },
        {
          "Key": "ObjectUsedText",
          "Value": "{source} uses the {this}."
        },
        {
          "Key": "InstantWallName",
          "Value": "Instant Wall"
        },
        {
          "Key": "InstantWallDescription",
          "Value": "If possible, it places a Wall on an empty Floor tile. It can\u0027t be removed!"
        },
        {
          "Key": "AnkhOfResurrectionMessageBoxHeader",
          "Value": "BUT WAIT!"
        },
        {
          "Key": "AnkhOfResurrectionMessageBoxText",
          "Value": "YOUR ANKH OF RESURRECTION\r\nBROUGHT YOU BACK TO LIFE!"
        },
        {
          "Key": "AnkhOfResurrectionUseText",
          "Value": "The {this} has brought {source} back to life!"
        },
        {
          "Key": "AnkhOfResurrectionName",
          "Value": "Ankh Of Resurrection"
        },
        {
          "Key": "AnkhOfResurrectionDescription",
          "Value": "A small, mystical artifact that brings the user back to life if they die. Consumed upon use.\r\n\r\n(Cannot be used manually)"
        },
        {
          "Key": "ScrollOfReanimationName",
          "Value": "Scroll of Reanimation"
        },
        {
          "Key": "ScrollOfReanimationDescription",
          "Value": "A single-use scroll that revives a fallen ally.\n\n(Must be used from the list of Actions)"
        },
        {
          "Key": "ScrollOfReanimationAttackDescription",
          "Value": "A single-use scroll that revives a fallen ally."
        },
        {
          "Key": "ScrollOfReanimationAttackText",
          "Value": "{source} reads the {this}."
        },
        {
          "Key": "WandOfScalesName",
          "Value": "Wand of Scales"
        },
        {
          "Key": "WandOfScalesDescription",
          "Value": "Wag this wand at a Tile to summon a friendly Lizard. It can\u0027t climb stairs, though.\n\n(Must be used from the list of Actions)"
        },
        {
          "Key": "WandOfScalesAttackDescription",
          "Value": "Wag this wand at a Tile to summon a friendly Lizard. It can\u0027t climb stairs, though."
        },
        {
          "Key": "WandOfScalesAttackText",
          "Value": "{source} wags the {this}."
        },
        {
          "Key": "LizardName",
          "Value": "Lizard"
        },
        {
          "Key": "LizardDescription",
          "Value": "A summonable, mighty, ADORABLE reptile that aids its summoner for no good reason, actually.\n\nIt can\u0027t climb stairs, however."
        },
        {
          "Key": "ClawsName",
          "Value": "Claws"
        },
        {
          "Key": "ClawsDescription",
          "Value": "Sharp claws made for climbing. And skewering.\n\nWeapon damage: 1d3"
        },
        {
          "Key": "ClawsAttackText",
          "Value": "{source} tries to slash {target}."
        },
        {
          "Key": "UnarmoredName",
          "Value": "Unarmored"
        },
        {
          "Key": "UnarmoredDescription",
          "Value": "You can\u0027t expect a lizard to wear armor...\n\nArmor Mitigation: 0"
        },
        {
          "Key": "SummonedDeathText",
          "Value": "{this} has poofed away."
        },
        {
          "Key": "AppleName",
          "Value": "Apple"
        },
        {
          "Key": "AppleDescription",
          "Value": "A hard red fruit that replenishes 50 Hunger when consumed."
        },
        {
          "Key": "ObjectEatenText",
          "Value": "{target} eats the {this}."
        },
        {
          "Key": "KeyTypeRed",
          "Value": "Red Key"
        },
        {
          "Key": "DoorTypeRed",
          "Value": "Red Door"
        },
        {
          "Key": "KeyTypePurple",
          "Value": "Purple Key"
        },
        {
          "Key": "DoorTypePurple",
          "Value": "Purple Door"
        },
        {
          "Key": "KeyTypeGreen",
          "Value": "Green Key"
        },
        {
          "Key": "DoorTypeGreen",
          "Value": "Green Door"
        },
        {
          "Key": "KeyTypeYellow",
          "Value": "Yellow Key"
        },
        {
          "Key": "DoorTypeYellow",
          "Value": "Yellow Door"
        },
        {
          "Key": "SpikedArmorName",
          "Value": "Spiky Suit"
        },
        {
          "Key": "SpikedArmorDescription",
          "Value": "Does not provide much protection, but the spikes on your gloves give you extra punch."
        },
        {
          "Key": "TileTypeWater",
          "Value": "Water"
        },
        {
          "Key": "TileTypeWaterDescription",
          "Value": "Rivers and puddles of fresh water. Stepping into them will get you Wet."
        },
        {
          "Key": "TileTypeLava",
          "Value": "Lava"
        },
        {
          "Key": "TileTypeLavaDescription",
          "Value": "\u0022Puddles\u0022 of scalding hot magma. Step into them if you want... doing so without protective equipment is asking for trouble."
        },
        {
          "Key": "CharacterWaterResistanceStat",
          "Value": "Water Resistance"
        },
        {
          "Key": "CharacterIceResistanceStat",
          "Value": "Ice Resistance"
        },
        {
          "Key": "CharacterFireResistanceStat",
          "Value": "Fire Resistance"
        },
        {
          "Key": "CharacterPoisonResistanceStat",
          "Value": "Poison Resistance"
        },
        {
          "Key": "ElementNameNormal",
          "Value": "Normal"
        },
        {
          "Key": "ElementNameWater",
          "Value": "Water"
        },
        {
          "Key": "ElementNameIce",
          "Value": "Ice"
        },
        {
          "Key": "ElementNameFire",
          "Value": "Fire"
        },
        {
          "Key": "ElementNamePoison",
          "Value": "Poison"
        },
        {
          "Key": "MiniBossName",
          "Value": "Mini Boss"
        },
        {
          "Key": "MiniBossDescription",
          "Value": "A nasty guy that is hiding the Stairs that let you progress through the Dungeon.\r\n\r\nSlay him to advance."
        },
        {
          "Key": "SkeletonName",
          "Value": "Skeleton"
        },
        {
          "Key": "SkeletonDescription",
          "Value": "A Melee Enemy raised from the dead.\r\n\r\nMore aggressive, immune to poison, and can no longer stick their tongue to mock you (because they no longer have one)."
        },
        {
          "Key": "WizardName",
          "Value": "Wizard"
        },
        {
          "Key": "WizardDescription",
          "Value": "An evil mage that will use an assortment of spells against you.\r\n\r\nDangerous."
        },
        {
          "Key": "WaterElementalName",
          "Value": "Water Elemental"
        },
        {
          "Key": "WaterElementalDescription",
          "Value": "An elemental made of pure water.\r\n\r\nAn annoying creature that will throw... well, pure water at you."
        },
        {
          "Key": "CharacterThrowsItem",
          "Value": "{source} throws {this} at {target}."
        },
        {
          "Key": "ThrowRottenMeatAttackText",
          "Value": "{source} grabs a chunk of rotten meat and throws it at {target}."
        },
        {
          "Key": "WaterJetAttackText",
          "Value": "{source} tries Water Jet on {target}."
        },
        {
          "Key": "HazmatSuitName",
          "Value": "Hazmat Suit"
        },
        {
          "Key": "HazmatSuitDescription",
          "Value": "A suit made for protection against hazardous environments.\r\n\r\nBlunt hits, however..."
        },
        {
          "Key": "AsbestosSuitName",
          "Value": "Asbestos Suit"
        },
        {
          "Key": "WoolenSuitName",
          "Value": "Woolen Suit"
        },
        {
          "Key": "AsbestosSuitDescription",
          "Value": "An outdated fireproof suit. It\u0027s still fireproof, but it makes toxins feel even worse."
        },
        {
          "Key": "ToxicGrenadeName",
          "Value": "Toxic Grenade"
        },
        {
          "Key": "ToxicGrenadeDescription",
          "Value": "A biohazard bomb. With a pathetic explosion, but powerful toxins."
        },
        {
          "Key": "ToxicGrenadeAttackDescription",
          "Value": "Lob the Toxic Grenade at a target.\r\n\r\nDeals practically no damage, bypassing Mitigation, but can Poison the target."
        },
        {
          "Key": "WaterBalloonName",
          "Value": "Water Balloon"
        },
        {
          "Key": "WaterBalloonDescription",
          "Value": "A balloon filled with water. Great for carnivals or for other unexpected uses."
        },
        {
          "Key": "WaterBalloonAttackDescription",
          "Value": "Lob the Water Balloon at a target, or maybe even yourself.\r\n\r\nDeals practically no damage, bypassing Mitigation, but gets the target Wet. It can be good for putting out burns or maybe a cool combo (pun intended)."
        },
        {
          "Key": "ToxicTrapName",
          "Value": "Toxic Trap"
        },
        {
          "Key": "ToxicTrapDescription",
          "Value": "It has a footstep sensor that releases dangerous toxins to however stands on top of it."
        },
        {
          "Key": "WetName",
          "Value": "Wet"
        },
        {
          "Key": "WetDescription",
          "Value": "Soaked with water. Offers resistance to fire but it\u0027s vulnerable to other states of water."
        },
        {
          "Key": "Floor8WelcomeText",
          "Value": "You encountered the Boss!\r\r\n\r\r\nThis one\u0027s the toughest of them all!"
        },
        {
          "Key": "Floor8WelcomeText2",
          "Value": "Defeat the boss to reveal the stairs, and end the game!"
        },
        {
          "Key": "WoolenSuitDescription",
          "Value": "A classic, granny-knitted piece of clothing that is great against insulation, but it\u0027s flammable."
        },
        {
          "Key": "ThrowCoinName",
          "Value": "Throw a Coin"
        },
        {
          "Key": "ThrowCoinDescription",
          "Value": "Throw a Coin a random amount of times, counting how many Heads and Tails you get.\r\n\r\n(Sample Action to test For loops)"
        },
        {
          "Key": "ThrowCoinActionText",
          "Value": "Let\u0027s throw [CoinAmount] coin(s)!"
        },
        {
          "Key": "GotHeadsText",
          "Value": "Got Heads!"
        },
        {
          "Key": "GotTailsText",
          "Value": "Got Tails!"
        },
        {
          "Key": "AllCoinsThrownText",
          "Value": "Thrown all [CoinAmount] coin(s)!"
        },
        {
          "Key": "HeadsThrownText",
          "Value": "Total Heads: [HeadsAmount]"
        },
        {
          "Key": "TailsThrownText",
          "Value": "Total Tails: [TailsAmount]"
        },
        {
          "Key": "GoForHeadsName",
          "Value": "Go for Heads"
        },
        {
          "Key": "GoForHeadsDescription",
          "Value": "Throw a Coin repeatedly until you get Tails, then count how many Heads you got\r\n\r\n(Sample Action to test While loops)"
        },
        {
          "Key": "GoForHeadsActionText",
          "Value": "Let\u0027s get Heads!"
        },
        {
          "Key": "GoForHeadsEndText",
          "Value": "We got Tails. Finishing..."
        },
        {
          "Key": "ImportantConsumableText",
          "Value": "You are about to use a powerful Consumable item.\r\n\r\nIt will be consumed if used.\r\n\r\nAre you sure you want to use it now?"
        },
        {
          "Key": "LookAtCoinName",
          "Value": "Look at Coin"
        },
        {
          "Key": "LookAtCoinDescription",
          "Value": "Throw a Coin repeatedly, either to count Heads and Tails, or get as many Heads in a row as you can\r\r\n\r\r\n(Sample Action to test Option prompts)"
        },
        {
          "Key": "SelectPromptText",
          "Value": "Select an option below:"
        }
      ]
    },
    {
      "Language": "es",
      "LocaleStrings": [
        {
          "Key": "DungeonName",
          "Value": "Cueva de los Betas"
        },
        {
          "Key": "WelcomeMessage",
          "Value": "\u00A1Bienvenido a esta mazmorra de prueba!\r\n\r\nEst\u00E1 hecha principalmente para mostrar las funcionalidades del editor, as\u00ED que la jugabilidad es muy b\u00E1sica.\r\n\r\n\u00A1Divi\u00E9rtete, y por favor deja comentarios al terminar!"
        },
        {
          "Key": "EndingMessage",
          "Value": "\u00A1BIEN HECHO!\r\n\r\n\u00A1HAS COMPLETADO LA CUEVA DE LOS BETAS!\r\n\r\nSi quieres apoyar este proyecto, puedes ayudar aqu\u00ED:\r\n\r\nhttps://github.com/Shiigu/RogueCustoms"
        },
        {
          "Key": "YesButtonText",
          "Value": "S\u00CD"
        },
        {
          "Key": "NoButtonText",
          "Value": "NO"
        },
        {
          "Key": "FloorName",
          "Value": "{DungeonName} - PISO {FloorLevel}"
        },
        {
          "Key": "NewTurn",
          "Value": "----------TURNO {TurnCount}----------"
        },
        {
          "Key": "FloorEnter",
          "Value": "Ingresando al Piso {FloorLevel}..."
        },
        {
          "Key": "FloorLeave",
          "Value": "Abandonando el Piso {FloorLevel}..."
        },
        {
          "Key": "CharacterSwitchedPlacesWithPlayer",
          "Value": "{CharacterName} dej\u00F3 pasar a {PlayerName}."
        },
        {
          "Key": "CharacterGotAnItem",
          "Value": "{CharacterName} recibi\u00F3 {ItemName} por parte de {SourceName}."
        },
        {
          "Key": "PlayerPutItemOnBag",
          "Value": "{CharacterName} coloc\u00F3 {ItemName} en la bolsa."
        },
        {
          "Key": "PlayerPutItemOnFloor",
          "Value": "{CharacterName} dej\u00F3 {ItemName} en el piso."
        },
        {
          "Key": "PlayerEquippedItem",
          "Value": "{CharacterName} equipa {ItemName}."
        },
        {
          "Key": "NPCPickItem",
          "Value": "{CharacterName} tom\u00F3 {ItemName}."
        },
        {
          "Key": "NPCPutItemOnFloor",
          "Value": "{CharacterName} solt\u00F3 {ItemName} al piso."
        },
        {
          "Key": "NPCItemCannotBePutOnFloor",
          "Value": "\u00A1{ItemName} se ha destruido!"
        },
        {
          "Key": "InventoryIsFull",
          "Value": "No se puede tomar {ItemName}. El inventario est\u00E1 lleno."
        },
        {
          "Key": "TileIsOccupied",
          "Value": "No se puede soltar {ItemName}. La baldosa est\u00E1 ocupada."
        },
        {
          "Key": "NoTarget",
          "Value": "\u00A1Pero no hab\u00EDa un objetivo!"
        },
        {
          "Key": "CannotBeUsed",
          "Value": "NO SE PUEDE USAR"
        },
        {
          "Key": "OnCooldown",
          "Value": "EN RECUPERACI\u00D3N:\nQUEDA(N) {CurrentCooldown} TURNO(S)"
        },
        {
          "Key": "MaximumUses",
          "Value": "ALCANZADO M\u00C1XIMO DE USOS"
        },
        {
          "Key": "RemainingUseCount",
          "Value": "QUEDA(N) {RemainingUses} USO(S)"
        },
        {
          "Key": "TargetIsTooClose",
          "Value": "EL OBJETIVO EST\u00C1 DEMASIADO CERCA"
        },
        {
          "Key": "TargetIsTooFarAway",
          "Value": "EL OBJETIVO EST\u00C1 DEMASIADO LEJOS"
        },
        {
          "Key": "TargetIsOfWrongFaction",
          "Value": "EL OBJETIVO DEBE SER {FactionTargets}"
        },
        {
          "Key": "TargetTypeSelf",
          "Value": "UNO MISMO"
        },
        {
          "Key": "TargetTypeAlly",
          "Value": "ALIADO"
        },
        {
          "Key": "TargetTypeNeutral",
          "Value": "NEUTRAL"
        },
        {
          "Key": "TargetTypeEnemy",
          "Value": "ENEMIGO"
        },
        {
          "Key": "TargetTypeTile",
          "Value": "TILE"
        },
        {
          "Key": "TargetDoesNotFulfillConditions",
          "Value": "EL OBJETIVO NO CUMPLE LAS CONDICIONES"
        },
        {
          "Key": "NotEnoughMP",
          "Value": "NO TIENES SUFICIENTE {MPStat}"
        },
        {
          "Key": "RequiresATarget",
          "Value": "REQUIERE UN OBJETIVO"
        },
        {
          "Key": "SelfRange",
          "Value": "Alcance: Tu casilla"
        },
        {
          "Key": "MeleeRange",
          "Value": "Alcance: Mel\u00E9"
        },
        {
          "Key": "SelfOrMeleeRange",
          "Value": "Alcance: Tu casilla o Mel\u00E9"
        },
        {
          "Key": "TilesRange",
          "Value": "Alcance: {TilesRange} casillas"
        },
        {
          "Key": "SelfOrTilesRange",
          "Value": "Alcance: Tu casilla o {TilesRange} casillas"
        },
        {
          "Key": "MPCost",
          "Value": "Coste de {MPStat}: {MPCost}"
        },
        {
          "Key": "FromSource",
          "Value": "(Origen: {SourceName})"
        },
        {
          "Key": "SightRangeStatFullMap",
          "Value": "Mapa entero"
        },
        {
          "Key": "SightRangeStatFullRoom",
          "Value": "Habitaci\u00F3n entera"
        },
        {
          "Key": "SightRangeStatFlatNumber",
          "Value": "{SightRange} casillas"
        },
        {
          "Key": "InventorySizeStatFlatNumber",
          "Value": "{InventorySize} objetos"
        },
        {
          "Key": "TileTypeFloor",
          "Value": "Floor"
        },
        {
          "Key": "TileTypeWall",
          "Value": "Wall"
        },
        {
          "Key": "TileTypeHallway",
          "Value": "Hallway"
        },
        {
          "Key": "TileTypeStairs",
          "Value": "Stairs"
        },
        {
          "Key": "TileTypeEmpty",
          "Value": "Empty"
        },
        {
          "Key": "CharacterLevelsUpMessage",
          "Value": "{CharacterName} ha alcanzado el Nivel {Level}!"
        },
        {
          "Key": "CharacterLevelsUpHeader",
          "Value": "\u00A1FELICIDADES!"
        },
        {
          "Key": "CharacterHPStat",
          "Value": "PS"
        },
        {
          "Key": "CharacterMPStat",
          "Value": "PM"
        },
        {
          "Key": "CharacterAttackStat",
          "Value": "Ataque"
        },
        {
          "Key": "CharacterDefenseStat",
          "Value": "Defensa"
        },
        {
          "Key": "CharacterMovementStat",
          "Value": "Movimiento"
        },
        {
          "Key": "CharacterSightRangeStat",
          "Value": "Visi\u00F3n"
        },
        {
          "Key": "CharacterHPRegenerationStat",
          "Value": "Regeneraci\u00F3n de PS"
        },
        {
          "Key": "CharacterMPRegenerationStat",
          "Value": "Regeneraci\u00F3n de PM"
        },
        {
          "Key": "CharacterHungerStat",
          "Value": "Hambre"
        },
        {
          "Key": "CharacterInventorySizeStat",
          "Value": "Capacidad de Inventario"
        },
        {
          "Key": "CharacterEvasionStat",
          "Value": "Evasi\u00F3n"
        },
        {
          "Key": "CharacterAccuracyStat",
          "Value": "Precisi\u00F3n"
        },
        {
          "Key": "CharacterDamageStat",
          "Value": "Da\u00F1o"
        },
        {
          "Key": "CharacterMitigationStat",
          "Value": "Mitigaci\u00F3n"
        },
        {
          "Key": "CharacterTakesDamage",
          "Value": "{CharacterName} recibi\u00F3 {DamageDealt} puntos de da\u00F1o de tipo {ElementName}."
        },
        {
          "Key": "CharacterHealsSomeHP",
          "Value": "\u00A1{CharacterName} ha recuperado {HealAmount} PS!"
        },
        {
          "Key": "CharacterHealsAllHP",
          "Value": "\u00A1{CharacterName} ha recuperado todos los PS!"
        },
        {
          "Key": "CharacterTakesDamageFromHunger",
          "Value": "{CharacterName} took {DamageDealt} {CharacterHPStat} of damage from {CharacterHungerStat}."
        },
        {
          "Key": "CharacterLosesMP",
          "Value": "{CharacterName} perdi\u00F3 {BurnedMP} {CharacterMPStat}."
        },
        {
          "Key": "CharacterRecoversSomeMP",
          "Value": "\u00A1{CharacterName} recuper\u00F3 {ReplenishAmount} {CharacterMPStat}!"
        },
        {
          "Key": "CharacterRecoversAllMP",
          "Value": "\u00A1{CharacterName} ha recuperado todo su {CharacterMPStat}!"
        },
        {
          "Key": "CharacterLosesHunger",
          "Value": "{CharacterName} perdi\u00F3 {LostHunger} de{CharacterHungerStat}."
        },
        {
          "Key": "CharacterRecoversSomeHunger",
          "Value": "\u00A1{CharacterName} recuper\u00F3 {ReplenishAmount} {CharacterHungerStat}!"
        },
        {
          "Key": "CharacterRecoversAllHunger",
          "Value": "\u00A1{CharacterName} ahora tiene {CharacterHungerStat} al m\u00E1ximo!"
        },
        {
          "Key": "CharacterGainsExperience",
          "Value": "{CharacterName} ha obtenido {Amount} puntos de experiencia."
        },
        {
          "Key": "CharacterGotStatused",
          "Value": "\u00A1{CharacterName} ahora est\u00E1 {StatusName}!"
        },
        {
          "Key": "CharacterStatusGotRefreshed",
          "Value": "\u00A1{StatusName} de {CharacterName} se ha vuelto a aplicar!"
        },
        {
          "Key": "CharacterIsNoLongerStatused",
          "Value": "\u00A1{CharacterName} ya no est\u00E1 {StatusName}!"
        },
        {
          "Key": "CharacterStatGotBuffed",
          "Value": "{StatName} de {CharacterName} ha aumentado en {Amount}."
        },
        {
          "Key": "CharacterStatGotNerfed",
          "Value": "{StatName} de {CharacterName} ha disminuido en {Amount}."
        },
        {
          "Key": "CharacterStatGotNeutralized",
          "Value": "{StatName} de {CharacterName} ha vuelto a la normalidad."
        },
        {
          "Key": "CharacterWasTeleported",
          "Value": "{CharacterName} se ha teletransportado a otro sitio."
        },
        {
          "Key": "CharacterStealsItem",
          "Value": "\u00A1{SourceName} le ha quitado {ItemName} a {TargetName}!"
        },
        {
          "Key": "CharacterConvertedTile",
          "Value": "\u00A1{CharacterName} ha creado {TileType}!"
        },
        {
          "Key": "CharacterCreatedATrap",
          "Value": "{CharacterName} despleg\u00F3 {TrapName}!"
        },
        {
          "Key": "CharacterCreatedAnNPC",
          "Value": "{NPCName} ha sido la invocaci\u00F3n de {CharacterName}."
        },
        {
          "Key": "CharacterRevivedAnNPC",
          "Value": "{NPCName} ha vuelto a la vida gracias a {CharacterName}."
        },
        {
          "Key": "CharacterBumpedDoor",
          "Value": "{CharacterName} se ha chocado con {DoorName}."
        },
        {
          "Key": "CharacterUnlockedDoor",
          "Value": "\u00A1{CharacterName} ha desbloqueado {DoorName}!"
        },
        {
          "Key": "CharacterLearnedScript",
          "Value": "\u00A1{CharacterName} aprendi\u00F3 {ScriptName}!"
        },
        {
          "Key": "CharacterForgotScript",
          "Value": "{CharacterName} olvid\u00F3 c\u00F3mo usar {ScriptName}."
        },
        {
          "Key": "StairsGotRevealed",
          "Value": "\u00A1Se han revelado las escaleras!"
        },
        {
          "Key": "KeyDescription",
          "Value": "Una llave.\r\n\r\n\u00DAsala en la Puerta correspondiente para abrirla.\r\n\r\nLa Llave se destruye cuando todas las Puertas correspondientes son abiertas, o al ingresar a un nuevo Piso.\r\n\r\n(Las Llaves no ocupan espacio de inventario)"
        },
        {
          "Key": "DoorDescription",
          "Value": "Una Puerta que sella el acceso a algo importante.\r\n\r\nUsa la Llave correspondiente para abrirla."
        },
        {
          "Key": "UnlockDoorName",
          "Value": "Desbloquear Puerta."
        },
        {
          "Key": "UnlockDoorDescription",
          "Value": "Intenta colocar la Llave en el hueco de la Puerta para abrirla.\r\n\r\nSolo funciona si la Llave y la Puerta son del mismo tipo."
        },
        {
          "Key": "AttackCriticalHitText",
          "Value": "\u00A1GOLPE CR\u00CDTICO!"
        },
        {
          "Key": "AttackMissedText",
          "Value": "\u00A1Pero fall\u00F3!"
        },
        {
          "Key": "AttackDealtNoDamageText",
          "Value": "El ataque no ha hecho da\u00F1o..."
        },
        {
          "Key": "ItemSteppedText",
          "Value": "{CharacterName} ha pisado {ItemName}."
        },
        {
          "Key": "TileIsOccupied",
          "Value": "No se puede soltar {ItemName}. La baldosa est\u00E1 ocupada."
        },
        {
          "Key": "MonsterHouseWarningLogMessage",
          "Value": "\u00A1{CharacterName} se ha topado con un Nido de Monstruos!"
        },
        {
          "Key": "MonsterHouseWarningMessage",
          "Value": "\u00A1Es un Nido de Monstruos!"
        },
        {
          "Key": "MonsterHouseWarningHeader",
          "Value": "\u00A1OH, NO!"
        },
        {
          "Key": "CharacterMaxHPStat",
          "Value": "PS M\u00E1ximos"
        },
        {
          "Key": "CharacterMaxMPStat",
          "Value": "PM M\u00E1ximos"
        },
        {
          "Key": "Floor1WelcomeText",
          "Value": "\u00A1Bienvenido al juego!\n\nBusca las escaleras para acceder al pr\u00F3ximo piso."
        },
        {
          "Key": "Floor2WelcomeText",
          "Value": "Esto es lo que se llama \u0022Piso de descanso\u0022.\n\nNo hay enemigos aqu\u00ED.\n\nObt\u00E9n los objetos que quieras antes de ir por las escaleras."
        },
        {
          "Key": "Floor2WarningText",
          "Value": "ADVERTENCIA: En este piso no regenerar\u00E1s PS."
        },
        {
          "Key": "Floor5WelcomeText",
          "Value": "\u00A1Has encontrado al Minijefe!\r\n\r\n\u00A1Este es muy duro, as\u00ED que ten cuidado!"
        },
        {
          "Key": "Floor5WelcomeText2",
          "Value": "\u00A1Derrota al Minijefe para revelar las escaleras, y continuar!"
        },
        {
          "Key": "PlayerFactionName",
          "Value": "Jugador"
        },
        {
          "Key": "PlayerFactionDescription",
          "Value": "La facci\u00F3n que te representa. \u00BFTu objetivo? Huir de la mazmorra."
        },
        {
          "Key": "AlliedNPCsFactionName",
          "Value": "NPCs Aliados"
        },
        {
          "Key": "AlliesNPCsFactionDescription",
          "Value": "Un grupo de NPCs que te \u0027ayudan\u0027, y a lo mejor te ense\u00F1an algo."
        },
        {
          "Key": "MeleeEnemiesFactionName",
          "Value": "Enemigos de Mel\u00E9"
        },
        {
          "Key": "MeleeEnemiesFactionDescription",
          "Value": "Los enemigos con armas de mel\u00E9.\n\nPodr\u00EDan atacar a sus compadres de rango si estos les golpean."
        },
        {
          "Key": "RangedEnemiesFactionName",
          "Value": "Enemies de Rango"
        },
        {
          "Key": "RangedEnemiesFactionDescription",
          "Value": "Los enemigos con armas de rango.\n\nPodr\u00EDan atacar a sus compadres de mel\u00E9 si estos les golpean."
        },
        {
          "Key": "EasyPlayerName",
          "Value": "Jugador F\u00E1cil"
        },
        {
          "Key": "EasyPlayerDescription",
          "Value": "Este eres t\u00FA, el Jugador.\r\n\r\nLo tienes facil.\r\nTu objetivo es llegar con vida al final de la mazmorra."
        },
        {
          "Key": "NormalPlayerName",
          "Value": "Jugador Normal"
        },
        {
          "Key": "NormalPlayerDescription",
          "Value": "Este eres t\u00FA, el Jugador.\n\nTu objetivo es llegar con vida al final de la mazmorra."
        },
        {
          "Key": "HardPlayerName",
          "Value": "Jugador Dif\u00EDcil"
        },
        {
          "Key": "HardPlayerDescription",
          "Value": "Este eres t\u00FA, el Jugador.\n\nLo tienes dif\u00EDcil.\nTu objetivo es llegar con vida al final de la mazmorra."
        },
        {
          "Key": "PlayerDeathText",
          "Value": "\u00A1{this} ha muerto!"
        },
        {
          "Key": "PlayerDeathMessageBoxHeader",
          "Value": "\u00A1OH, NO!"
        },
        {
          "Key": "PlayerDeathMessageBoxText",
          "Value": "\u00A1HAS MUERTO!"
        },
        {
          "Key": "MeleeEnemyName",
          "Value": "Enemigo Mel\u00E9"
        },
        {
          "Key": "MeleeEnemyDescription",
          "Value": "Un tipo malo que te golpea. A veces, en cambio, se burla de ti sacando la lengua."
        },
        {
          "Key": "MeleeEnemyStickTongueText",
          "Value": "{this} le saca la lengua a {target}."
        },
        {
          "Key": "RangedEnemyName",
          "Value": "Enemigo a Distancia"
        },
        {
          "Key": "RangedEnemyDescription",
          "Value": "Un tipo malo que te lanza javalinas. A veces est\u00E1n envenenadas."
        },
        {
          "Key": "ThiefName",
          "Value": "Ladr\u00F3n"
        },
        {
          "Key": "ThiefDescription",
          "Value": "Un tipo malo que te golpea. Le gusta robar objetos, pero solo puede llevar uno a la vez."
        },
        {
          "Key": "ThiefStealAttackText",
          "Value": "{this} quiere hacerle el descuento de los cinco dedos a {target}."
        },
        {
          "Key": "ThiefStealSuccessText",
          "Value": "{this} se r\u00EDe de la desgracia de {target}."
        },
        {
          "Key": "ThiefStealFailureText",
          "Value": "\u00A1Pero {this} no pudo tomar nada!"
        },
        {
          "Key": "EnemyDeathText",
          "Value": "El malvado {this} ha muerto."
        },
        {
          "Key": "MeleeAllyName",
          "Value": "Aliado Mel\u00E9"
        },
        {
          "Key": "MeleeAllyDescription",
          "Value": "Un tipo bueno que puede dar pu\u00F1etazos."
        },
        {
          "Key": "MeleeAllyDeclareText",
          "Value": "{this} declara que los d\u00EDas de {target} est\u00E1n contados."
        },
        {
          "Key": "AllyDeathText",
          "Value": "El bienintencionado {this} ha muerto."
        },
        {
          "Key": "BossName",
          "Value": "Jefe"
        },
        {
          "Key": "BossDescription",
          "Value": "El gran tipo malo de la mazmorra. \u00A1M\u00E1talo para salir de aqu\u00ED!"
        },
        {
          "Key": "BossAwaitText",
          "Value": "El {this} espera a que {target} se acerque."
        },
        {
          "Key": "BossDeathText",
          "Value": "CONCAT(\u0022\u00A1EL INFAME \u0022, UPPER(\u0022{this}\u0022), \u0022 YA NO EXISTE!\u0022)"
        },
        {
          "Key": "BareFistsName",
          "Value": "Pu\u00F1os"
        },
        {
          "Key": "BareFistsDescription",
          "Value": "Para dar unos buenos golpes cuando nada m\u00E1s sirve."
        },
        {
          "Key": "MeleeWeaponAttackName",
          "Value": "Ataque Mel\u00E9 del arma"
        },
        {
          "Key": "RangedWeaponAttackName",
          "Value": "Ataque de Rango del arma"
        },
        {
          "Key": "BareFistsAttackDescription",
          "Value": "Causa da\u00F1o normal sin efecto secundario."
        },
        {
          "Key": "BareFistsAttackText",
          "Value": "{source} intenta darle un pu\u00F1etazo a {target}."
        },
        {
          "Key": "FailedAttackText",
          "Value": "\u00A1Pero fall\u00F3!"
        },
        {
          "Key": "ClothArmorName",
          "Value": "Tela"
        },
        {
          "Key": "ClothArmorDescription",
          "Value": "Armadura b\u00E1sica y ligera."
        },
        {
          "Key": "SkirtName",
          "Value": "Falda"
        },
        {
          "Key": "SkirtDescription",
          "Value": "\u00BFC\u00F3mo es que est\u00E1s leyendo esto?"
        },
        {
          "Key": "HealingPotionName",
          "Value": "Poci\u00F3n Curativa"
        },
        {
          "Key": "HealingPotionDescription",
          "Value": "El objeto de curaci\u00F3n m\u00E1s elemental.\r\n\r\nCura hasta 2d4 PS antes de desaparecer."
        },
        {
          "Key": "PotionOfStrengthName",
          "Value": "Poci\u00F3n de Vigor"
        },
        {
          "Key": "PotionOfStrengthDescription",
          "Value": "Exactamente lo mismo que la Poci\u00F3n Curativa pero todo lo contrario.\n\nAl usarse, aplica Envalentonado (\u002B10% al Ataque) por 75 turnos antes de desaparecer."
        },
        {
          "Key": "AntidoteName",
          "Value": "Ant\u00EDdoto"
        },
        {
          "Key": "AntidoteDescription",
          "Value": "Cuando est\u00E1s malito.\n\nAl usarse, elimina el estado Envenenado antes de desaparecer."
        },
        {
          "Key": "ObjectSteppedText",
          "Value": "{target} pas\u00F3 por encima de {this}."
        },
        {
          "Key": "ObjectEquippedText",
          "Value": "{target} equipa {this}."
        },
        {
          "Key": "ObjectDrunkText",
          "Value": "{target} bebe {this}."
        },
        {
          "Key": "ObjectDisappearedText",
          "Value": "{this} acaba de desaparecer."
        },
        {
          "Key": "ObjectNotUsedText",
          "Value": "... o mejor no, porque no tendr\u00EDa efecto."
        },
        {
          "Key": "ObjectNotActivatedText",
          "Value": "\u00A1{this} no se activ\u00F3!"
        },
        {
          "Key": "SwordName",
          "Value": "Espada"
        },
        {
          "Key": "SwordDescription",
          "Value": "Herramienta confiable para cortar enemigos."
        },
        {
          "Key": "SwordAttackDescription",
          "Value": "Causa da\u00F1o normal sin efecto secundario."
        },
        {
          "Key": "SwordAttackText",
          "Value": "{source} blande la {this} hacia {target}."
        },
        {
          "Key": "SwordAllInAttackName",
          "Value": "A por todas"
        },
        {
          "Key": "SwordAllInAttackDescription",
          "Value": "Causa doble da\u00F1o sin efecto secundario.\r\n\r\nTe juro que no lo rob\u00E9 de Divinity: Original Sin II"
        },
        {
          "Key": "SwordAllInAttackText",
          "Value": "\u00A1{source} va con todo hacia {target} con la {this}!"
        },
        {
          "Key": "PistolName",
          "Value": "Pistola"
        },
        {
          "Key": "PistolDescription",
          "Value": "El arma m\u00E1s poderosa que encontrar\u00E1s en la mazmorra."
        },
        {
          "Key": "PistolMeleeAttackDescription",
          "Value": "Causa poco da\u00F1o sin efecto secundario."
        },
        {
          "Key": "PistolMeleeAttackText",
          "Value": "{source} le da a {target} con la culata de la {this}."
        },
        {
          "Key": "PistolRangedAttackDescription",
          "Value": "Causa da\u00F1o normal sin efecto secundario."
        },
        {
          "Key": "PistolRangedAttackText",
          "Value": "{source} dispara a {target} con la {this}."
        },
        {
          "Key": "LeatherName",
          "Value": "Cuero"
        },
        {
          "Key": "LeatherDescription",
          "Value": "Protecci\u00F3n c\u00F3moda pero algo efectiva."
        },
        {
          "Key": "PlateName",
          "Value": "Placas"
        },
        {
          "Key": "PlateDescription",
          "Value": "La mejor fuente de protecci\u00F3n de la mazmorra.\n\nMitigaci\u00F3n: 2"
        },
        {
          "Key": "JavelinName",
          "Value": "Javalina"
        },
        {
          "Key": "JavelinDescription",
          "Value": "Los Enemigos de Rango le adoran. Los Jugadores y los Aliados Mel\u00E9 le odian."
        },
        {
          "Key": "JavelinMeleeAttackDescription",
          "Value": "Causa la mitad de da\u00F1o sin efecto secundario."
        },
        {
          "Key": "JavelinMeleeAttackText",
          "Value": "{source} intenta apu\u00F1alar a {target} con la {this}."
        },
        {
          "Key": "JavelinNormalRangedAttackDescription",
          "Value": "Causa da\u00F1o normal sin efecto secundario."
        },
        {
          "Key": "JavelinNormalRangedAttackText",
          "Value": "{source} le lanza una {this} a {target}."
        },
        {
          "Key": "JavelinEnvenomedRangedAttackName",
          "Value": "Ataque de Rango de Arma Envenenado"
        },
        {
          "Key": "JavelinEnvenomedRangedAttackDescription",
          "Value": "Causa la mitad de da\u00F1o normal con un 50% de posibilidades de envenenar al objetivo."
        },
        {
          "Key": "JavelinEnvenomedRangedAttackText",
          "Value": "{source} le pone veneno a una {this} y se la lanza a {target}."
        },
        {
          "Key": "ScrollOfDestructionName",
          "Value": "Pergamino de Destrucci\u00F3n"
        },
        {
          "Key": "ScrollOfDestructionDescription",
          "Value": "Un pergamino de uso \u00FAnico que mata instant\u00E1neamente al objetivo.\n\n(Debe usarse desde la lista de Acciones)"
        },
        {
          "Key": "ScrollOfDestructionAttackDescription",
          "Value": "Un pergamino de uso \u00FAnico que mata instant\u00E1neamente al objetivo."
        },
        {
          "Key": "ScrollOfDestructionAttackText",
          "Value": "{source} mira a {target} y lee el {this}."
        },
        {
          "Key": "MagicStaffName",
          "Value": "B. M\u00E1gico"
        },
        {
          "Key": "MagicStaffDescription",
          "Value": "Un bast\u00F3n m\u00EDstico, vers\u00E1til en cuanto a hechizos."
        },
        {
          "Key": "StaffOfMagusName",
          "Value": "Bast\u00F3n de Mago"
        },
        {
          "Key": "StaffOfMagusDescription",
          "Value": "Causa da\u00F1o normal sin efecto secundario.\r\r\n\r\r\nTe juro que no lo rob\u00E9 de Divinity: Original Sin II"
        },
        {
          "Key": "StaffOfMagusAttackText",
          "Value": "{source} usa Bast\u00F3n de Mago en {target}."
        },
        {
          "Key": "FireballName",
          "Value": "Bola de Fuego"
        },
        {
          "Key": "FireballDescription",
          "Value": "Lanza una esfera ardiente al objetivo. 50% de posibilidades de Quemar por 40 turnos."
        },
        {
          "Key": "FireballAttackText",
          "Value": "{source} usa Bola de Fuego en {target}."
        },
        {
          "Key": "IceballName",
          "Value": "Bola de Hielo"
        },
        {
          "Key": "IceballDescription",
          "Value": "Lanza una esfera de fr\u00EDo al objetivo. 25% de posibilidades de Congelar por 3 turnos, impidiendo el movimiento."
        },
        {
          "Key": "IceballAttackText",
          "Value": "{source} usa Bola de Hielo en {target}."
        },
        {
          "Key": "HealName",
          "Value": "Curar"
        },
        {
          "Key": "HealDescription",
          "Value": "Cura hasta 2d6 damage en el objetivo.\r\nSe puede usar en s\u00ED mismo."
        },
        {
          "Key": "HealAttackText",
          "Value": "{source} usa Curar en {target}."
        },
        {
          "Key": "SpikeTrapName",
          "Value": "Trampa de P\u00FAas"
        },
        {
          "Key": "SpikeTrapDescription",
          "Value": "Puede causar 1 de da\u00F1o, sin importar la armadura, al pisarse. Puede romperse despu\u00E9s."
        },
        {
          "Key": "WonderTileName",
          "Value": "Baldosa M\u00E1gica"
        },
        {
          "Key": "WonderTileDescription",
          "Value": "Quita todas las alteraciones de estad\u00EDsticas, sean positivas o negativas, al pisarse."
        },
        {
          "Key": "IceTrapName",
          "Value": "Trampa de Hielo"
        },
        {
          "Key": "IceTrapDescription",
          "Value": "Tiene una probabilidad del 30% de Congelar al objetivo al ser pisada. Si lo hace, luego se rompe."
        },
        {
          "Key": "TeleportTrapName",
          "Value": "Trampa de Teletransporte"
        },
        {
          "Key": "TeleportTrapDescription",
          "Value": "Teleporta a los personajes que la pisan. Puede romperse despu\u00E9s."
        },
        {
          "Key": "WonderTileFailedText",
          "Value": "Pero no pas\u00F3 nada."
        },
        {
          "Key": "InvigoratedName",
          "Value": "Envalentonado"
        },
        {
          "Key": "InvigoratedDescription",
          "Value": "\u00A1Tienes m\u00E1s Ataque!"
        },
        {
          "Key": "PoisonedName",
          "Value": "Envenenado"
        },
        {
          "Key": "PoisonedDescription",
          "Value": "Recibiendo da\u00F1o cada 28 turnos"
        },
        {
          "Key": "PoisonedText",
          "Value": "El Veneno recorre el cuerpo de {target}."
        },
        {
          "Key": "BurningName",
          "Value": "Quemado"
        },
        {
          "Key": "BurningDescription",
          "Value": "Recibiendo da\u00F1o cada 5 turnos"
        },
        {
          "Key": "BurnedText",
          "Value": "{target} siente las quemaduras."
        },
        {
          "Key": "FrozenName",
          "Value": "Congelado"
        },
        {
          "Key": "FrozenDescription",
          "Value": "No puede hacer nada"
        },
        {
          "Key": "FrozenText",
          "Value": "{target} no se puede mover por el congelamiento."
        },
        {
          "Key": "RegenBlockName",
          "Value": "Falto de Regeneraci\u00F3n"
        },
        {
          "Key": "RegenBlockDescription",
          "Value": "Perdida toda la Regeneraci\u00F3n de PS base"
        },
        {
          "Key": "Floor2HealthWarningText",
          "Value": "Pareces estar herido, aunque podr\u00EDas seguir luchando.\n\nDe todas formas, deber\u00EDas considerar curarte."
        },
        {
          "Key": "Floor2HealthWarningHeader",
          "Value": "Cuidado..."
        },
        {
          "Key": "Floor5BossDefeatedHeader",
          "Value": "\u00A1FELICIDADES!"
        },
        {
          "Key": "Floor5BossDefeatedText",
          "Value": "\u00A1Has derrotado al Jefe! \u00A1Ya puedes salir!\r\n\r\nTotal de Enemigos Muertos: [EnemiesDefeated]"
        },
        {
          "Key": "MagicPotionName",
          "Value": "Poci\u00F3n M\u00E1gica"
        },
        {
          "Key": "MagicPotionDescription",
          "Value": "Una bebida misteriosa que rebosa magia.\n\nCura hasta 1d4 PM antes de desaparecer."
        },
        {
          "Key": "ThiefSandAttackText",
          "Value": "{this} intenta arrojar arena a los ojos de {target}."
        },
        {
          "Key": "WaveHandsName",
          "Value": "Ondear Mano"
        },
        {
          "Key": "WaveHandsDescription",
          "Value": "Ondea tu mano a un amigo por ser buena gente."
        },
        {
          "Key": "SourceWaveHandText",
          "Value": "{source} le ondea la mano a {target}."
        },
        {
          "Key": "TargetWaveHandText",
          "Value": "{target} se la ondea de vuelta a {source}."
        },
        {
          "Key": "ThiefSpawnText",
          "Value": "Alguien escurridizo ha ingresado a este piso."
        },
        {
          "Key": "SandAttackName",
          "Value": "Ataque Arena"
        },
        {
          "Key": "InvisibilityPotionName",
          "Value": "Poci\u00F3n de Invisibilidad"
        },
        {
          "Key": "InvisibilityPotionDescription",
          "Value": "Una botella cuyo contenido no se puede ver.\r\n\r\nBeberla te har\u00E1 invisible por 20 turnos.\r\n\r\n(Se acaba antes si atacas o te atacan)"
        },
        {
          "Key": "InvisibleName",
          "Value": "Invisible"
        },
        {
          "Key": "InvisibleDescription",
          "Value": "No te pueden ver. Se acaba antes si atacas o te atacan."
        },
        {
          "Key": "DisarmedSpikeTrapName",
          "Value": "Trampa de P\u00FAas desarmada"
        },
        {
          "Key": "DisarmedSpikeTrapDescription",
          "Value": "Una Trampa de P\u00FAas desarmada.\r\r\n\r\r\n\u00DAsala en una casilla para armarla. Inicialmente solo la ver\u00E1n t\u00FA y tus aliados, pero cuidado... la trampa no sabe de alianzas."
        },
        {
          "Key": "ObjectUsedText",
          "Value": "{source} us\u00F3 {this}."
        },
        {
          "Key": "InstantWallName",
          "Value": "Muro instant\u00E1neo"
        },
        {
          "Key": "InstantWallDescription",
          "Value": "De ser posible, planta un Muro en un Piso vac\u00EDo. No se puede remover."
        },
        {
          "Key": "AnkhOfResurrectionMessageBoxHeader",
          "Value": "\u00A1PERO ESPERA!"
        },
        {
          "Key": "AnkhOfResurrectionMessageBoxText",
          "Value": "\u00A1TU ANKH DE LA RESUCITACI\u00D3N\r\r\nTE HA DEVUELTO A LA VIDA!"
        },
        {
          "Key": "AnkhOfResurrectionUseText",
          "Value": "El {this} ha devuelto a {source} a la vida."
        },
        {
          "Key": "AnkhOfResurrectionName",
          "Value": "Ankh de la Resucitaci\u00F3n"
        },
        {
          "Key": "AnkhOfResurrectionDescription",
          "Value": "Un peque\u00F1o y m\u00EDstico artilugio que devuelve a su usuario a la vida al morir. Se consume al usar.\r\n\r\n(No se puede usar manualmente)"
        },
        {
          "Key": "ScrollOfReanimationName",
          "Value": "Pergamino de Reanimaci\u00F3n"
        },
        {
          "Key": "ScrollOfReanimationDescription",
          "Value": "Un pergamino de uso \u00FAnico que revive a un aliado ca\u00EDdo.\r\n\r\n(Debe usarse desde la lista de Acciones)"
        },
        {
          "Key": "ScrollOfReanimationAttackDescription",
          "Value": "Un pergamino de uso \u00FAnico que revive a un aliado ca\u00EDdo."
        },
        {
          "Key": "ScrollOfReanimationAttackText",
          "Value": "{source} lee el {this}."
        },
        {
          "Key": "WandOfScalesName",
          "Value": "Vara de Escamas"
        },
        {
          "Key": "WandOfScalesDescription",
          "Value": "Ondea esta varita en una casilla para invocar un Lagarto amistoso. Lamentablemente no sabe usar las escaleras.\r\r\n\r\r\n(Debe usarse desde la lista de Acciones)"
        },
        {
          "Key": "WandOfScalesAttackDescription",
          "Value": "Ondea esta varita en una casilla para invocar un Lagarto amistoso. Lamentablemente no sabe usar las escaleras."
        },
        {
          "Key": "WandOfScalesAttackText",
          "Value": "{source} ondea la {this}."
        },
        {
          "Key": "LizardName",
          "Value": "Lagarto"
        },
        {
          "Key": "LizardDescription",
          "Value": "Un poderoso, invocable y ADORABLE reptile que ayuda a su invocador... sin motivo alguno, la verdad.\r\n\r\nY no sabe subir las escaleras."
        },
        {
          "Key": "ClawsName",
          "Value": "Garras"
        },
        {
          "Key": "ClawsDescription",
          "Value": "Garras filosas hechas para trepar. Y desmembrar.\r\n\r\nDa\u00F1o de arma: 1d3"
        },
        {
          "Key": "ClawsAttackText",
          "Value": "{source} intenta ara\u00F1ar a {target}."
        },
        {
          "Key": "UnarmoredName",
          "Value": "Sin armadura"
        },
        {
          "Key": "UnarmoredDescription",
          "Value": "No puedes esperar que un Lagarto lleve armadura...\r\n\r\nMitigaci\u00F3n: 0"
        },
        {
          "Key": "SummonedDeathText",
          "Value": "{this} se desvaneci\u00F3..."
        },
        {
          "Key": "AppleName",
          "Value": "Manzana"
        },
        {
          "Key": "AppleDescription",
          "Value": "Una fruta dura y roja que recupera 50 de Hambre al consumirse."
        },
        {
          "Key": "ObjectEatenText",
          "Value": "{target} se come {this}."
        },
        {
          "Key": "KeyTypeRed",
          "Value": "Llave Roja"
        },
        {
          "Key": "DoorTypeRed",
          "Value": "Puerta Roja"
        },
        {
          "Key": "KeyTypePurple",
          "Value": "Llave P\u00FArpura"
        },
        {
          "Key": "DoorTypePurple",
          "Value": "Puerta P\u00FArpura"
        },
        {
          "Key": "KeyTypeGreen",
          "Value": "Llave Verde"
        },
        {
          "Key": "DoorTypeGreen",
          "Value": "Puerta Verde"
        },
        {
          "Key": "KeyTypeYellow",
          "Value": "Llave Amarilla"
        },
        {
          "Key": "DoorTypeYellow",
          "Value": "Puerta Amarilla"
        },
        {
          "Key": "SpikedArmorName",
          "Value": "Ropa Picuda"
        },
        {
          "Key": "SpikedArmorDescription",
          "Value": "No protege demasiado, pero los pinchos en tus guantes te dan m\u00E1s poder."
        },
        {
          "Key": "TileTypeWater",
          "Value": "Agua"
        },
        {
          "Key": "TileTypeWaterDescription",
          "Value": "R\u00EDos y charcos de agua fresca. Pisarlos te dejar\u00E1 Mojado."
        },
        {
          "Key": "TileTypeLava",
          "Value": "Lava"
        },
        {
          "Key": "TileTypeLavaDescription",
          "Value": "\u0022Lagos\u0022 de magma ardiente. Puedes pasar sobre ellos si quieres... pero ser\u00EDa un peligro sin la protecci\u00F3n adecuada."
        },
        {
          "Key": "CharacterWaterResistanceStat",
          "Value": "Resistencia al Agua"
        },
        {
          "Key": "CharacterIceResistanceStat",
          "Value": "Resistencia al Hielo"
        },
        {
          "Key": "CharacterFireResistanceStat",
          "Value": "Resistencia al Fuego"
        },
        {
          "Key": "CharacterPoisonResistanceStat",
          "Value": "Resistencia al Veneno"
        },
        {
          "Key": "ElementNameNormal",
          "Value": "Normal"
        },
        {
          "Key": "ElementNameWater",
          "Value": "Agua"
        },
        {
          "Key": "ElementNameIce",
          "Value": "Hielo"
        },
        {
          "Key": "ElementNameFire",
          "Value": "Fuego"
        },
        {
          "Key": "ElementNamePoison",
          "Value": "Veneno"
        },
        {
          "Key": "MiniBossName",
          "Value": "Minijefe"
        },
        {
          "Key": "MiniBossDescription",
          "Value": "Un mal t\u00EDo que est\u00E1 ocultando las Escaleras que necesitas para avanzar.\r\n\r\nM\u00E1tale para revelarlas."
        },
        {
          "Key": "SkeletonName",
          "Value": "Esqueleto"
        },
        {
          "Key": "SkeletonDescription",
          "Value": "Un Enemigo Mel\u00E9 que ha vuelto de los muertos.\r\n\r\nEs m\u00E1s agresivo, inmune al Veneno, y ya no te saca la lengua para burlarte (porque no tiene una)."
        },
        {
          "Key": "WizardName",
          "Value": "Hechicero"
        },
        {
          "Key": "WizardDescription",
          "Value": "Un mago maligno que usar\u00E1 varios hechizos contra t\u00ED.\r\n\r\nEs peligroso."
        },
        {
          "Key": "WaterElementalName",
          "Value": "Elemental de Agua"
        },
        {
          "Key": "WaterElementalDescription",
          "Value": "Un elemental hecho de agua pura.\r\n\r\nEs una criatura molesta que... bueno, te arrojar\u00E1 agua."
        },
        {
          "Key": "CharacterThrowsItem",
          "Value": "{source} arroja {this} hacia {target}."
        },
        {
          "Key": "ThrowRottenMeatAttackText",
          "Value": "{source} toma carne podrida y se la lanza a {target}."
        },
        {
          "Key": "WaterJetAttackText",
          "Value": "{source} usa Chorro de Agua en {target}."
        },
        {
          "Key": "HazmatSuitName",
          "Value": "Tr. Protector"
        },
        {
          "Key": "HazmatSuitDescription",
          "Value": "Un traje hecho para la protecci\u00F3n contra entornos nocivos.\r\n\r\nEn cambio, contra los golpes contundentes..."
        },
        {
          "Key": "AsbestosSuitName",
          "Value": "Tr. Asbestos"
        },
        {
          "Key": "WoolenSuitName",
          "Value": "Tr. de Lana"
        },
        {
          "Key": "AsbestosSuitDescription",
          "Value": "Un traje anticuado a prueba de fuego. Funciona, pero las toxinas se sienten a\u00FAn peor..."
        },
        {
          "Key": "ToxicGrenadeName",
          "Value": "Granada T\u00F3xica"
        },
        {
          "Key": "ToxicGrenadeDescription",
          "Value": "Una bomba de armas biol\u00F3gicas. Con una explosi\u00F3n pat\u00E9tica, pero trae potentes venenos."
        },
        {
          "Key": "ToxicGrenadeAttackDescription",
          "Value": "Arroja la Granada T\u00F3xica al objetivo.\r\n\r\nCausa muy poco da\u00F1o, aunque ignorando Mitigaci\u00F3n, y puede Envenenar."
        },
        {
          "Key": "WaterBalloonName",
          "Value": "Globo de Agua"
        },
        {
          "Key": "WaterBalloonDescription",
          "Value": "Un globo lleno de agua.\r\n\r\nExcelente para los carnavales y alguna que otra cosa m\u00E1s."
        },
        {
          "Key": "WaterBalloonAttackDescription",
          "Value": "Arroja el Globo de Agua al objetivo... o incluso t\u00ED mismo.\r\r\n\r\r\n\rCausa muy poco da\u00F1o, aunque ignorando Mitigaci\u00F3n, y deja Mojado al objetivo. Puede servir para quitar quemaduras o hacer un combo muy cool."
        },
        {
          "Key": "ToxicTrapName",
          "Value": "Trampa T\u00F3xica"
        },
        {
          "Key": "ToxicTrapDescription",
          "Value": "Tiene un sensor de pisadas para liberar poderosos gases venenosos a quien se encuentra encima."
        },
        {
          "Key": "WetName",
          "Value": "Mojado"
        },
        {
          "Key": "WetDescription",
          "Value": "Lleno de agua. Resiste el fuego pero es m\u00E1s vulnerable a m\u00E1s agua."
        },
        {
          "Key": "Floor8WelcomeText",
          "Value": "\u00A1Has encontrado al Jefe!\r\n\r\n\u00A1Este es el m\u00E1s duro de todos!"
        },
        {
          "Key": "Floor8WelcomeText2",
          "Value": "\u00A1Derrota al Jefe para revelar las escaleras, y as\u00ED acabar el juego!"
        },
        {
          "Key": "WoolenSuitDescription",
          "Value": "Un cl\u00E1sico traje que parece tejido por una abuelita. Genial para aislar el fr\u00EDo, pero es muy inflamable."
        },
        {
          "Key": "ThrowCoinName",
          "Value": "Arrojar Moneda"
        },
        {
          "Key": "ThrowCoinDescription",
          "Value": "Arroja una moneda una cantidad de veces al azar para contar Caras o Cruces\r\r\n\r\r\n(Acci\u00F3n de muestra para probar bucles For)"
        },
        {
          "Key": "ThrowCoinActionText",
          "Value": "\u00A1A lanzar [CoinAmount] moneda(s)!"
        },
        {
          "Key": "GotHeadsText",
          "Value": "\u00A1Es Cara!"
        },
        {
          "Key": "GotTailsText",
          "Value": "\u00A1Es Cruz!"
        },
        {
          "Key": "AllCoinsThrownText",
          "Value": "\u00A1Lanzada(s) [CoinAmount] moneda(s)!"
        },
        {
          "Key": "HeadsThrownText",
          "Value": "Total de Caras: [HeadsAmount]"
        },
        {
          "Key": "TailsThrownText",
          "Value": "Total Cruces: [TailsAmount]"
        },
        {
          "Key": "GoForHeadsName",
          "Value": "Contar Caras"
        },
        {
          "Key": "GoForHeadsDescription",
          "Value": "Arroja una moneda repetidamente hasta obtener Cruz, para luego contar cu\u00E1ntas Caras hubo\r\r\n\r\r\n(Acci\u00F3n de muestra para probar bucles While)"
        },
        {
          "Key": "GoForHeadsActionText",
          "Value": "\u00A1Vamos por Caras!"
        },
        {
          "Key": "GoForHeadsEndText",
          "Value": "Eso fue Cruz. Terminemos..."
        },
        {
          "Key": "ImportantConsumableText",
          "Value": "Est\u00E1s a punto de usar un Consumible poderoso.\r\r\n\r\r\nDesaparecer\u00E1 si lo usas.\r\r\n\r\r\n\u00BFEst\u00E1s seguro de querer usarlo ahora?"
        },
        {
          "Key": "LookAtCoinName",
          "Value": "Mirar la Moneda"
        },
        {
          "Key": "LookAtCoinDescription",
          "Value": "Arroja una moneda repetidamente, ya sea para contar Cara o Cruz, o ver cu\u00E1ntas Caras seguidas salen\r\r\n\r\r\r\n(Acci\u00F3n de muestra para probar ventanas de selecci\u00F3n)"
        },
        {
          "Key": "SelectPromptText",
          "Value": "Elige una de las siguientes opciones:"
        }
      ]
    }
  ],
  "AmountOfFloors": 8,
  "TileTypeInfos": [
    {
      "Id": "Floor",
      "Name": "TileTypeFloor",
      "IsWalkable": true,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": true,
      "CanBeTransformed": true,
      "CanVisiblyConnectWithOtherTiles": false,
      "CanHaveMultilineConnections": false
    },
    {
      "Id": "Empty",
      "Name": "TileTypeEmpty",
      "IsWalkable": false,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": false,
      "CanBeTransformed": false,
      "CanVisiblyConnectWithOtherTiles": false,
      "CanHaveMultilineConnections": false
    },
    {
      "Id": "Wall",
      "Name": "TileTypeWall",
      "IsWalkable": false,
      "IsSolid": true,
      "IsVisible": false,
      "AcceptsItems": false,
      "CanBeTransformed": true,
      "CanVisiblyConnectWithOtherTiles": true,
      "CanHaveMultilineConnections": false
    },
    {
      "Id": "Hallway",
      "Name": "TileTypeHallway",
      "IsWalkable": true,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": true,
      "CanBeTransformed": true,
      "CanVisiblyConnectWithOtherTiles": true,
      "CanHaveMultilineConnections": true
    },
    {
      "Id": "Stairs",
      "Name": "TileTypeStairs",
      "IsWalkable": true,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": false,
      "CanBeTransformed": false,
      "CanVisiblyConnectWithOtherTiles": false,
      "CanHaveMultilineConnections": false
    },
    {
      "Id": "Water",
      "Name": "TileTypeWater",
      "Description": "TileTypeWaterDescription",
      "IsWalkable": true,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": true,
      "CanBeTransformed": false,
      "CanVisiblyConnectWithOtherTiles": false,
      "CanHaveMultilineConnections": false,
      "OnStood": {
        "Id": "OnTileStand",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "DoesNotHaveStatus(Target,Wet)",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CheckCondition",
          "Params": [
            {
              "ParamName": "Condition",
              "Value": "HasStatus(Target, Burning)"
            }
          ],
          "OnSuccess": {
            "EffectName": "CleanseAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Burning"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          },
          "OnFailure": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Wet"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "Power",
                "Value": "0"
              },
              {
                "ParamName": "TurnLength",
                "Value": "3"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      }
    },
    {
      "Id": "Lava",
      "Name": "TileTypeLava",
      "Description": "TileTypeLavaDescription",
      "IsWalkable": true,
      "IsSolid": false,
      "IsVisible": true,
      "AcceptsItems": true,
      "CanBeTransformed": false,
      "CanVisiblyConnectWithOtherTiles": false,
      "CanHaveMultilineConnections": false,
      "OnStood": {
        "Id": "OnTileStand",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CheckCondition",
          "Params": [
            {
              "ParamName": "Condition",
              "Value": "HasStatus(Target, Wet)"
            }
          ],
          "OnSuccess": {
            "EffectName": "CleanseAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Wet"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          },
          "OnFailure": {
            "EffectName": "CheckCondition",
            "Params": [
              {
                "ParamName": "Condition",
                "Value": "HasStatus(Target, Burning)"
              }
            ],
            "OnSuccess": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "Attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Attack",
                  "Value": "1"
                },
                {
                  "ParamName": "Defense",
                  "Value": "0"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "0"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "0"
                },
                {
                  "ParamName": "Element",
                  "Value": "Fire"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            },
            "OnFailure": {
              "EffectName": "CheckCondition",
              "Params": [
                {
                  "ParamName": "Condition",
                  "Value": "CurrentArmor(Target) != \u0022AsbestosSuit\u0022"
                }
              ],
              "OnSuccess": {
                "EffectName": "ApplyAlteredStatus",
                "Params": [
                  {
                    "ParamName": "Id",
                    "Value": "Burning"
                  },
                  {
                    "ParamName": "Target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "Power",
                    "Value": "Ceiling({target.MaxHP} / 10, 0)"
                  },
                  {
                    "ParamName": "TurnLength",
                    "Value": "40"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ]
              }
            }
          }
        }
      }
    }
  ],
  "TileSetInfos": [
    {
      "Id": "Default",
      "TileTypes": [
        {
          "TileTypeId": "Floor",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": ".",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 169,
              "G": 169,
              "B": 169,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Empty",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": " ",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Wall",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2588",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Hallway",
          "Connector": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Stairs",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u003E",
            "BackgroundColor": {
              "R": 255,
              "G": 255,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 100,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Water",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2591",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 128,
              "B": 255,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Lava",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 128,
              "B": 64,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        }
      ]
    },
    {
      "Id": "Retro",
      "TileTypes": [
        {
          "TileTypeId": "Floor",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": ".",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 84,
              "G": 252,
              "B": 84,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Empty",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": " ",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Wall",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u256C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u2554",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2557",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u255A",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u255D",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2550",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2551",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Hallway",
          "Connector": {
            "Character": "\u256C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 84,
              "B": 0,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 168,
              "G": 168,
              "B": 168,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Stairs",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u256B",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 84,
              "G": 252,
              "B": 84,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Water",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2591",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 160,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Lava",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2593",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 128,
              "B": 64,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        }
      ]
    },
    {
      "Id": "Hell",
      "TileTypes": [
        {
          "TileTypeId": "Floor",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": ".",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Empty",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": " ",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Wall",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u256C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u2554",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2557",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u255A",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u255D",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2550",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2551",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Hallway",
          "Connector": {
            "Character": "\u256C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2592",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u250C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u2510",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u2514",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u2518",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u2500",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u2534",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u252C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u2502",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u251C",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u2524",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 128,
              "G": 0,
              "B": 0,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Stairs",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u25BA",
            "BackgroundColor": {
              "R": 64,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 0,
              "B": 0,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Water",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2591",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 0,
              "G": 0,
              "B": 160,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        },
        {
          "TileTypeId": "Lava",
          "Connector": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Central": {
            "Character": "\u2593",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 128,
              "B": 64,
              "A": 255
            }
          },
          "TopLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "TopRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "BottomRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Horizontal": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalBottom": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "HorizontalTop": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "Vertical": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalLeft": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          },
          "VerticalRight": {
            "Character": "\u0000",
            "BackgroundColor": {
              "R": 0,
              "G": 0,
              "B": 0,
              "A": 255
            },
            "ForegroundColor": {
              "R": 255,
              "G": 255,
              "B": 255,
              "A": 255
            }
          }
        }
      ]
    }
  ],
  "FloorInfos": [
    {
      "MinFloorLevel": 1,
      "MaxFloorLevel": 1,
      "Width": 64,
      "Height": 32,
      "GenerateStairsOnStart": true,
      "TileSetId": "Default",
      "PossibleMonsters": [
        {
          "ClassId": "MeleeEnemy",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 10,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 6,
          "ChanceToPick": 45,
          "SpawnCondition": ""
        },
        {
          "ClassId": "RangedEnemy",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 10,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Thief",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 4,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 15,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MeleeAlly",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 2,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 15,
          "SpawnCondition": ""
        }
      ],
      "SimultaneousMinMonstersAtStart": 2,
      "SimultaneousMaxMonstersInFloor": 6,
      "TurnsPerMonsterGeneration": 25,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Sword",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 8,
          "SpawnCondition": ""
        },
        {
          "ClassId": "LeatherArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Antidote",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 9,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Pistol",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicStaff",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "PlateArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ScrollOfDestruction",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 2,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "InvisibilityPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "DisarmedSpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 3,
          "SpawnCondition": ""
        },
        {
          "ClassId": "InstantWall",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 3,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ScrollOfReanimation",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 2,
          "SpawnCondition": ""
        },
        {
          "ClassId": "WandOfScales",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Apple",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 10,
          "SpawnCondition": "UsesStat(Player, Hunger)"
        },
        {
          "ClassId": "SpikedArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 3,
          "SpawnCondition": ""
        },
        {
          "ClassId": "HazmatSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 6
        },
        {
          "ClassId": "AsbestosSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 6
        },
        {
          "ClassId": "WoolenSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 6
        },
        {
          "ClassId": "ToxicGrenade",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 10
        },
        {
          "ClassId": "WaterBalloon",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 10
        }
      ],
      "MinItemsInFloor": 4,
      "MaxItemsInFloor": 10,
      "PossibleTraps": [
        {
          "ClassId": "WonderTile",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 45,
          "SpawnCondition": ""
        },
        {
          "ClassId": "SpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "TeleportTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "IceTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ToxicTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 10
        }
      ],
      "MinTrapsInFloor": 1,
      "MaxTrapsInFloor": 5,
      "MaxConnectionsBetweenRooms": 1,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 25,
      "MonsterHouseOdds": 0,
      "HungerDegeneration": 0.0750,
      "PossibleLayouts": [
        {
          "Name": "Standard - 3c x 3r",
          "Rows": 3,
          "Columns": 3,
          "RoomDisposition": "?????? ? ??????? ? ??????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 21,
            "Height": 10
          }
        },
        {
          "Name": "Standard - 4c x 4r",
          "Rows": 4,
          "Columns": 4,
          "RoomDisposition": "???????? ? ? ????????? ? ? ????????? ? ? ????????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 8
          }
        },
        {
          "Name": "Standard - 3c x 2r",
          "Rows": 2,
          "Columns": 3,
          "RoomDisposition": "?????? ? ??????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 21,
            "Height": 16
          }
        },
        {
          "Name": "Standard - 3c x 4r",
          "Rows": 4,
          "Columns": 3,
          "RoomDisposition": "?????? ? ??????? ? ??????? ? ??????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 21,
            "Height": 8
          }
        },
        {
          "Name": "OuterDummyRing - 4c x 4r",
          "Rows": 4,
          "Columns": 4,
          "RoomDisposition": "D?D?D?D? ? ? ?D?R?R?D? ? ? ?D?R?R?D? ? ? ?D?D?D?D",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 8
          }
        },
        {
          "Name": "InnerDummyRing - 4c x 4r",
          "Rows": 4,
          "Columns": 4,
          "RoomDisposition": "R?R?R?R? ? ? ?R?D?D?R? ? ? ?R?D?D?R? ? ? ?R?R?R?R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 8
          }
        }
      ],
      "PossibleSpecialTiles": [
        {
          "TileTypeId": "Water",
          "GeneratorType": 0,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 1
        },
        {
          "TileTypeId": "Water",
          "GeneratorType": 1,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 6
        }
      ],
      "PossibleKeys": {
        "LockedRoomOdds": 0,
        "KeySpawnInEnemyInventoryOdds": 0,
        "MaxPercentageOfLockedCandidateRooms": 0,
        "KeyTypes": []
      },
      "OnFloorStart": {
        "Id": "DungeonStartMessage",
        "Name": "DungeonStartMessage",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "MessageBox",
          "Params": [
            {
              "ParamName": "title",
              "Value": "DungeonName"
            },
            {
              "ParamName": "text",
              "Value": "Floor1WelcomeText"
            },
            {
              "ParamName": "color",
              "Value": "255,255,0,255"
            }
          ],
          "Then": {
            "EffectName": "SetFlag",
            "Params": [
              {
                "ParamName": "Key",
                "Value": "EnemiesDefeated"
              },
              {
                "ParamName": "Value",
                "Value": "0"
              },
              {
                "ParamName": "RemoveOnFloorChange",
                "Value": "False"
              }
            ]
          }
        }
      }
    },
    {
      "MinFloorLevel": 2,
      "MaxFloorLevel": 2,
      "Width": 48,
      "Height": 24,
      "GenerateStairsOnStart": true,
      "TileSetId": "Default",
      "PossibleMonsters": [],
      "SimultaneousMinMonstersAtStart": 0,
      "SimultaneousMaxMonstersInFloor": 0,
      "TurnsPerMonsterGeneration": 0,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 30,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Antidote",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 15,
          "SpawnCondition": "HasStatus(Player, Poisoned)"
        },
        {
          "ClassId": "MagicStaff",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 9,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "InvisibilityPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "DisarmedSpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 3,
          "SpawnCondition": ""
        },
        {
          "ClassId": "InstantWall",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 3,
          "SpawnCondition": ""
        },
        {
          "ClassId": "WandOfScales",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Apple",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, Hunger)"
        }
      ],
      "MinItemsInFloor": 2,
      "MaxItemsInFloor": 7,
      "PossibleTraps": [],
      "MinTrapsInFloor": 0,
      "MaxTrapsInFloor": 0,
      "MaxConnectionsBetweenRooms": 0,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 0,
      "MonsterHouseOdds": 0,
      "HungerDegeneration": 0,
      "PossibleLayouts": [
        {
          "Name": "OneBigRoom - 1c x 1r",
          "Rows": 1,
          "Columns": 1,
          "RoomDisposition": "R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 48,
            "Height": 24
          }
        }
      ],
      "PossibleSpecialTiles": [],
      "PossibleKeys": {
        "LockedRoomOdds": 0,
        "KeySpawnInEnemyInventoryOdds": 0,
        "MaxPercentageOfLockedCandidateRooms": 0,
        "KeyTypes": []
      },
      "OnFloorStart": {
        "Id": "FloorStartMessage",
        "Name": "FloorStartMessage",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ApplyAlteredStatus",
          "Params": [
            {
              "ParamName": "id",
              "Value": "RegenBlock"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "power",
              "Value": "0"
            },
            {
              "ParamName": "turnlength",
              "Value": "-1"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "MessageBox",
            "Params": [
              {
                "ParamName": "title",
                "Value": "DungeonName"
              },
              {
                "ParamName": "text",
                "Value": "Floor2WelcomeText"
              },
              {
                "ParamName": "color",
                "Value": "255,255,0,255"
              }
            ],
            "Then": {
              "EffectName": "MessageBox",
              "Params": [
                {
                  "ParamName": "title",
                  "Value": "DungeonName"
                },
                {
                  "ParamName": "text",
                  "Value": "Floor2WarningText"
                },
                {
                  "ParamName": "color",
                  "Value": "255,0,0,255"
                }
              ],
              "Then": {
                "EffectName": "CheckCondition",
                "Params": [
                  {
                    "ParamName": "Condition",
                    "Value": "({target.ClassId} == \u0022EasyPlayer\u0022 || {target.ClassId} == \u0022NormalPlayer\u0022) \u0026\u0026 ({target.HP} / {target.MaxHP} \u003C 0.5)"
                  }
                ],
                "OnSuccess": {
                  "EffectName": "MessageBox",
                  "Params": [
                    {
                      "ParamName": "Title",
                      "Value": "Floor2HealthWarningHeader"
                    },
                    {
                      "ParamName": "Text",
                      "Value": "Floor2HealthWarningText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,128,0,255"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    {
      "MinFloorLevel": 3,
      "MaxFloorLevel": 4,
      "Width": 64,
      "Height": 32,
      "GenerateStairsOnStart": true,
      "TileSetId": "Retro",
      "PossibleMonsters": [
        {
          "ClassId": "MeleeEnemy",
          "MinLevel": 1,
          "MaxLevel": 3,
          "OverallMaxForKindInFloor": 20,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 7,
          "ChanceToPick": 50,
          "SpawnCondition": ""
        },
        {
          "ClassId": "RangedEnemy",
          "MinLevel": 1,
          "MaxLevel": 3,
          "OverallMaxForKindInFloor": 10,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Thief",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 5,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 15,
          "SpawnCondition": ""
        }
      ],
      "SimultaneousMinMonstersAtStart": 4,
      "SimultaneousMaxMonstersInFloor": 8,
      "TurnsPerMonsterGeneration": 20,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Sword",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "LeatherArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 6,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Antidote",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Pistol",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PlateArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ScrollOfDestruction",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicStaff",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "InvisibilityPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "WandOfScales",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Apple",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, Hunger)"
        },
        {
          "ClassId": "SpikedArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 4,
          "SpawnCondition": ""
        },
        {
          "ClassId": "HazmatSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5
        },
        {
          "ClassId": "AsbestosSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5
        },
        {
          "ClassId": "WoolenSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5
        },
        {
          "ClassId": "ToxicGrenade",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 7
        },
        {
          "ClassId": "WaterBalloon",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 7
        }
      ],
      "MinItemsInFloor": 3,
      "MaxItemsInFloor": 8,
      "PossibleTraps": [
        {
          "ClassId": "WonderTile",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 30,
          "SpawnCondition": ""
        },
        {
          "ClassId": "SpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "TeleportTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "IceTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        }
      ],
      "MinTrapsInFloor": 1,
      "MaxTrapsInFloor": 9,
      "MaxConnectionsBetweenRooms": 1,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 25,
      "MonsterHouseOdds": 10,
      "HungerDegeneration": 0.1,
      "PossibleLayouts": [
        {
          "Name": "Standard - 4c x 4r",
          "Rows": 4,
          "Columns": 4,
          "RoomDisposition": "???????? ? ? ????????? ? ? ????????? ? ? ????????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 8
          }
        },
        {
          "Name": "Standard - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "?????????? ? ? ? ??????????? ? ? ? ??????????? ? ? ? ??????????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 12,
            "Height": 8
          }
        },
        {
          "Name": "Standard - 4c x 3r",
          "Rows": 3,
          "Columns": 4,
          "RoomDisposition": "???????? ? ? ????????? ? ? ????????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 10
          }
        },
        {
          "Name": "Standard - 3c x 4r",
          "Rows": 4,
          "Columns": 3,
          "RoomDisposition": "?????? ? ??????? ? ??????? ? ??????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 21,
            "Height": 8
          }
        },
        {
          "Name": "OuterDummyRing - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "D?D?D?D?D? ? ? ? ?D?R?R?R?D? ? ? ? ?D?R?R?R?D? ? ? ? ?D?D?D?D?D",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 12,
            "Height": 8
          }
        },
        {
          "Name": "InnerDummyRing - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "R?R?R?R?R? ? ? ? ?R?D?D?D?R? ? ? ? ?R?D?D?D?R? ? ? ? ?R?R?R?R?R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 12,
            "Height": 8
          }
        }
      ],
      "PossibleSpecialTiles": [
        {
          "TileTypeId": "Water",
          "GeneratorType": 0,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 1
        },
        {
          "TileTypeId": "Water",
          "GeneratorType": 1,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 6
        },
        {
          "TileTypeId": "Lava",
          "GeneratorType": 1,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 3
        }
      ],
      "PossibleKeys": {
        "LockedRoomOdds": 33,
        "KeySpawnInEnemyInventoryOdds": 40,
        "MaxPercentageOfLockedCandidateRooms": 25,
        "KeyTypes": [
          {
            "KeyTypeName": "Red",
            "CanLockStairs": true,
            "CanLockItems": true,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 0,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 0,
                "A": 255
              }
            }
          },
          {
            "KeyTypeName": "Green",
            "CanLockStairs": false,
            "CanLockItems": true,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 255,
                "B": 0,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 255,
                "B": 0,
                "A": 255
              }
            }
          }
        ]
      }
    },
    {
      "MinFloorLevel": 5,
      "MaxFloorLevel": 5,
      "Width": 32,
      "Height": 16,
      "GenerateStairsOnStart": false,
      "TileSetId": "Retro",
      "PossibleMonsters": [
        {
          "ClassId": "MiniBoss",
          "MinLevel": 5,
          "MaxLevel": 5,
          "OverallMaxForKindInFloor": 1,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 100,
          "SpawnCondition": ""
        }
      ],
      "SimultaneousMinMonstersAtStart": 1,
      "SimultaneousMaxMonstersInFloor": 1,
      "TurnsPerMonsterGeneration": 1,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 20,
          "SpawnCondition": "UsesStat(Player, MP)"
        }
      ],
      "MinItemsInFloor": 0,
      "MaxItemsInFloor": 4,
      "PossibleTraps": [
        {
          "ClassId": "SpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 80,
          "SpawnCondition": ""
        },
        {
          "ClassId": "IceTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 30,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ToxicTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 30
        }
      ],
      "MinTrapsInFloor": 1,
      "MaxTrapsInFloor": 10,
      "MaxConnectionsBetweenRooms": 0,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 0,
      "MonsterHouseOdds": 0,
      "HungerDegeneration": 0.2500,
      "PossibleLayouts": [
        {
          "Name": "OneBigRoom - 1c x 1r",
          "Rows": 1,
          "Columns": 1,
          "RoomDisposition": "R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 32,
            "Height": 16
          }
        }
      ],
      "PossibleSpecialTiles": [],
      "PossibleKeys": {
        "LockedRoomOdds": 0,
        "KeySpawnInEnemyInventoryOdds": 0,
        "MaxPercentageOfLockedCandidateRooms": 0,
        "KeyTypes": []
      },
      "OnFloorStart": {
        "Id": "DungeonStartMessage",
        "Name": "DungeonStartMessage",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "MessageBox",
          "Params": [
            {
              "ParamName": "title",
              "Value": "DungeonName"
            },
            {
              "ParamName": "text",
              "Value": "Floor5WelcomeText"
            },
            {
              "ParamName": "color",
              "Value": "255,0,0,255"
            }
          ],
          "Then": {
            "EffectName": "MessageBox",
            "Params": [
              {
                "ParamName": "title",
                "Value": "DungeonName"
              },
              {
                "ParamName": "text",
                "Value": "Floor5WelcomeText2"
              },
              {
                "ParamName": "color",
                "Value": "255,255,0,255"
              }
            ]
          }
        }
      }
    },
    {
      "MinFloorLevel": 6,
      "MaxFloorLevel": 7,
      "Width": 64,
      "Height": 32,
      "GenerateStairsOnStart": true,
      "TileSetId": "Hell",
      "PossibleMonsters": [
        {
          "ClassId": "MeleeEnemy",
          "MinLevel": 1,
          "MaxLevel": 3,
          "OverallMaxForKindInFloor": 20,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 4,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "RangedEnemy",
          "MinLevel": 1,
          "MaxLevel": 3,
          "OverallMaxForKindInFloor": 10,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Thief",
          "MinLevel": 1,
          "MaxLevel": 2,
          "OverallMaxForKindInFloor": 5,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 15,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Skeleton",
          "MinLevel": 2,
          "MaxLevel": 4,
          "OverallMaxForKindInFloor": 20,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 5,
          "ChanceToPick": 25
        },
        {
          "ClassId": "WaterElemental",
          "MinLevel": 2,
          "MaxLevel": 4,
          "OverallMaxForKindInFloor": 10,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20
        },
        {
          "ClassId": "Wizard",
          "MinLevel": 3,
          "MaxLevel": 5,
          "OverallMaxForKindInFloor": 1,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": true,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5
        }
      ],
      "SimultaneousMinMonstersAtStart": 4,
      "SimultaneousMaxMonstersInFloor": 8,
      "TurnsPerMonsterGeneration": 20,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Sword",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "LeatherArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 6,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 10,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Antidote",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Pistol",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PlateArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ScrollOfDestruction",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicStaff",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, MP)"
        },
        {
          "ClassId": "InvisibilityPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "WandOfScales",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": ""
        },
        {
          "ClassId": "Apple",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 5,
          "SpawnCondition": "UsesStat(Player, Hunger)"
        },
        {
          "ClassId": "SpikedArmor",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 4,
          "SpawnCondition": ""
        },
        {
          "ClassId": "HazmatSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 4
        },
        {
          "ClassId": "AsbestosSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 4
        },
        {
          "ClassId": "WoolenSuit",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 4
        },
        {
          "ClassId": "ToxicGrenade",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 6
        },
        {
          "ClassId": "WaterBalloon",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 8
        }
      ],
      "MinItemsInFloor": 3,
      "MaxItemsInFloor": 10,
      "PossibleTraps": [
        {
          "ClassId": "WonderTile",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 30,
          "SpawnCondition": ""
        },
        {
          "ClassId": "SpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "TeleportTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25,
          "SpawnCondition": ""
        },
        {
          "ClassId": "IceTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 20,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ToxicTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 3,
          "ChanceToPick": 25
        }
      ],
      "MinTrapsInFloor": 1,
      "MaxTrapsInFloor": 9,
      "MaxConnectionsBetweenRooms": 1,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 25,
      "MonsterHouseOdds": 33,
      "HungerDegeneration": 0.1500,
      "PossibleLayouts": [
        {
          "Name": "Standard - 4c x 4r",
          "Rows": 4,
          "Columns": 4,
          "RoomDisposition": "???????? ? ? ????????? ? ? ????????? ? ? ????????",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 16,
            "Height": 8
          }
        },
        {
          "Name": "OuterDummyRing - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "D?D?D?D?D? ? ? ? ?D?R?R?R?D? ? ? ? ?D?R?R?R?D? ? ? ? ?D?D?D?D?D",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 12,
            "Height": 8
          }
        },
        {
          "Name": "InnerDummyRing - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "R?R?R?R?R? ? ? ? ?R?D?D?D?R? ? ? ? ?R?D?D?D?R? ? ? ? ?R?R?R?R?R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 12,
            "Height": 8
          }
        },
        {
          "Name": "Outer Cross - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "  ? ? ?  - \u002B \u002B \u002B  ?\u002BD\u002BD\u002BD\u002B?- \u002B \u002B \u002B  ?\u002BD\u002BD\u002BD\u002B?  \u002B \u002B \u002B    ? ? ?  ",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 5,
            "Height": 8
          }
        },
        {
          "Name": "Inner Cross - 5c x 4r",
          "Rows": 4,
          "Columns": 5,
          "RoomDisposition": "  D D D    \u002B \u002B \u002B  D\u002B?????\u002BD  ? ? ?  D\u002B?????\u002BD  \u002B \u002B \u002B    D D D  ",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 5,
            "Height": 8
          }
        }
      ],
      "PossibleSpecialTiles": [
        {
          "TileTypeId": "Water",
          "GeneratorType": 0,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 1
        },
        {
          "TileTypeId": "Lava",
          "GeneratorType": 1,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 6
        },
        {
          "TileTypeId": "Water",
          "GeneratorType": 1,
          "MinSpecialTileGenerations": 0,
          "MaxSpecialTileGenerations": 3
        }
      ],
      "PossibleKeys": {
        "LockedRoomOdds": 50,
        "KeySpawnInEnemyInventoryOdds": 67,
        "MaxPercentageOfLockedCandidateRooms": 33,
        "KeyTypes": [
          {
            "KeyTypeName": "Red",
            "CanLockStairs": true,
            "CanLockItems": true,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 0,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 0,
                "A": 255
              }
            }
          },
          {
            "KeyTypeName": "Green",
            "CanLockStairs": false,
            "CanLockItems": true,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 255,
                "B": 0,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 255,
                "B": 0,
                "A": 255
              }
            }
          },
          {
            "KeyTypeName": "Yellow",
            "CanLockStairs": true,
            "CanLockItems": false,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 255,
                "G": 255,
                "B": 0,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 255,
                "G": 255,
                "B": 0,
                "A": 255
              }
            }
          },
          {
            "KeyTypeName": "Purple",
            "CanLockStairs": true,
            "CanLockItems": true,
            "KeyConsoleRepresentation": {
              "Character": "\u00A5",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 255,
                "A": 255
              }
            },
            "DoorConsoleRepresentation": {
              "Character": "\u0398",
              "BackgroundColor": {
                "R": 0,
                "G": 0,
                "B": 0,
                "A": 255
              },
              "ForegroundColor": {
                "R": 128,
                "G": 0,
                "B": 255,
                "A": 255
              }
            }
          }
        ]
      }
    },
    {
      "MinFloorLevel": 8,
      "MaxFloorLevel": 8,
      "Width": 32,
      "Height": 16,
      "GenerateStairsOnStart": false,
      "TileSetId": "Hell",
      "PossibleMonsters": [
        {
          "ClassId": "Boss",
          "MinLevel": 5,
          "MaxLevel": 5,
          "OverallMaxForKindInFloor": 1,
          "CanSpawnOnFirstTurn": true,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 1,
          "ChanceToPick": 100,
          "SpawnCondition": ""
        }
      ],
      "SimultaneousMinMonstersAtStart": 1,
      "SimultaneousMaxMonstersInFloor": 1,
      "TurnsPerMonsterGeneration": 1,
      "PossibleItems": [
        {
          "ClassId": "HealingPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "PotionOfStrength",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "MagicPotion",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 2,
          "ChanceToPick": 20,
          "SpawnCondition": "UsesStat(Player, MP)"
        }
      ],
      "MinItemsInFloor": 0,
      "MaxItemsInFloor": 4,
      "PossibleTraps": [
        {
          "ClassId": "SpikeTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 50,
          "SpawnCondition": ""
        },
        {
          "ClassId": "IceTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 35,
          "SpawnCondition": ""
        },
        {
          "ClassId": "ToxicTrap",
          "MinLevel": 0,
          "MaxLevel": 0,
          "OverallMaxForKindInFloor": 0,
          "CanSpawnOnFirstTurn": false,
          "CanSpawnAfterFirstTurn": false,
          "MinimumInFirstTurn": 0,
          "SimultaneousMaxForKindInFloor": 15,
          "ChanceToPick": 35
        }
      ],
      "MinTrapsInFloor": 1,
      "MaxTrapsInFloor": 10,
      "MaxConnectionsBetweenRooms": 0,
      "OddsForExtraConnections": 0,
      "RoomFusionOdds": 0,
      "MonsterHouseOdds": 0,
      "HungerDegeneration": 0.500,
      "PossibleLayouts": [
        {
          "Name": "OneBigRoom - 1c x 1r",
          "Rows": 1,
          "Columns": 1,
          "RoomDisposition": "R",
          "MinRoomSize": {
            "Width": 5,
            "Height": 5
          },
          "MaxRoomSize": {
            "Width": 32,
            "Height": 16
          }
        }
      ],
      "PossibleSpecialTiles": [],
      "PossibleKeys": {
        "LockedRoomOdds": 0,
        "KeySpawnInEnemyInventoryOdds": 0,
        "MaxPercentageOfLockedCandidateRooms": 0,
        "KeyTypes": []
      },
      "OnFloorStart": {
        "Id": "FloorStart",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "MessageBox",
          "Params": [
            {
              "ParamName": "title",
              "Value": "DungeonName"
            },
            {
              "ParamName": "text",
              "Value": "Floor8WelcomeText"
            },
            {
              "ParamName": "color",
              "Value": "255,0,0,255"
            }
          ],
          "Then": {
            "EffectName": "MessageBox",
            "Params": [
              {
                "ParamName": "title",
                "Value": "DungeonName"
              },
              {
                "ParamName": "text",
                "Value": "Floor8WelcomeText2"
              },
              {
                "ParamName": "color",
                "Value": "255,255,0,255"
              }
            ]
          }
        }
      }
    }
  ],
  "FactionInfos": [
    {
      "Id": "PlayerFaction",
      "Name": "PlayerFactionName",
      "Description": "PlayerFactionDescription",
      "AlliedWith": [
        "PlayerFaction",
        "AlliedNPCs"
      ],
      "NeutralWith": [],
      "EnemiesWith": [
        "MeleeEnemies",
        "RangedEnemies"
      ]
    },
    {
      "Id": "AlliedNPCs",
      "Name": "AlliedNPCsFactionName",
      "Description": "AlliesNPCsFactionDescription",
      "AlliedWith": [
        "PlayerFaction",
        "AlliedNPCs"
      ],
      "NeutralWith": [],
      "EnemiesWith": [
        "MeleeEnemies",
        "RangedEnemies"
      ]
    },
    {
      "Id": "MeleeEnemies",
      "Name": "MeleeEnemiesFactionName",
      "Description": "MeleeEnemiesFactionDescription",
      "AlliedWith": [
        "MeleeEnemies"
      ],
      "NeutralWith": [
        "RangedEnemies"
      ],
      "EnemiesWith": [
        "PlayerFaction",
        "AlliedNPCs"
      ]
    },
    {
      "Id": "RangedEnemies",
      "Name": "RangedEnemiesFactionName",
      "Description": "RangedEnemiesFactionDescription",
      "AlliedWith": [
        "RangedEnemies"
      ],
      "NeutralWith": [
        "MeleeEnemies"
      ],
      "EnemiesWith": [
        "PlayerFaction",
        "AlliedNPCs"
      ]
    }
  ],
  "ElementInfos": [
    {
      "Id": "Normal",
      "Name": "ElementNameNormal",
      "Color": {
        "R": 255,
        "G": 255,
        "B": 255,
        "A": 255
      },
      "ResistanceStatId": "",
      "ExcessResistanceCausesHealDamage": false
    },
    {
      "Id": "Water",
      "Name": "ElementNameWater",
      "Color": {
        "R": 0,
        "G": 128,
        "B": 255,
        "A": 255
      },
      "ResistanceStatId": "WaterResistance",
      "ExcessResistanceCausesHealDamage": true,
      "OnAfterAttack": {
        "Id": "ElementAfterAttack",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "Id",
              "Value": "Burning"
            },
            {
              "ParamName": "Target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Wet"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "50"
              },
              {
                "ParamName": "Power",
                "Value": "0"
              },
              {
                "ParamName": "TurnLength",
                "Value": "3"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      }
    },
    {
      "Id": "Ice",
      "Name": "ElementNameIce",
      "Color": {
        "R": 0,
        "G": 255,
        "B": 255,
        "A": 255
      },
      "ResistanceStatId": "IceResistance",
      "ExcessResistanceCausesHealDamage": true,
      "OnAfterAttack": {
        "Id": "ElementAfterAttack",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CheckCondition",
          "Params": [
            {
              "ParamName": "Condition",
              "Value": "HasStatus(Target, Wet)"
            }
          ],
          "OnSuccess": {
            "EffectName": "CleanseAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Wet"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "Then": {
              "EffectName": "ApplyAlteredStatus",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "Frozen"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "Power",
                  "Value": "0"
                },
                {
                  "ParamName": "TurnLength",
                  "Value": "3"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ]
            }
          },
          "OnFailure": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Frozen"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "25"
              },
              {
                "ParamName": "Power",
                "Value": "0"
              },
              {
                "ParamName": "TurnLength",
                "Value": "3"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      }
    },
    {
      "Id": "Fire",
      "Name": "ElementNameFire",
      "Color": {
        "R": 255,
        "G": 128,
        "B": 0,
        "A": 255
      },
      "ResistanceStatId": "FireResistance",
      "ExcessResistanceCausesHealDamage": true,
      "OnAfterAttack": {
        "Id": "ElementAfterAttack",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CheckCondition",
          "Params": [
            {
              "ParamName": "Condition",
              "Value": "CurrentArmor(Target) == \u0022AsbestosSuit\u0022"
            }
          ],
          "OnFailure": {
            "EffectName": "CleanseAlteredStatus",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "Wet"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "Then": {
              "EffectName": "CleanseAlteredStatus",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "Frozen"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "ApplyAlteredStatus",
                "Params": [
                  {
                    "ParamName": "Id",
                    "Value": "Burning"
                  },
                  {
                    "ParamName": "Target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "50"
                  },
                  {
                    "ParamName": "Power",
                    "Value": "Ceiling({target.MaxHP} / 20, 0)"
                  },
                  {
                    "ParamName": "TurnLength",
                    "Value": "40"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "Id": "Poison",
      "Name": "ElementNamePoison",
      "Color": {
        "R": 0,
        "G": 128,
        "B": 0,
        "A": 255
      },
      "ResistanceStatId": "PoisonResistance",
      "ExcessResistanceCausesHealDamage": true,
      "OnAfterAttack": {
        "Id": "ElementAfterAttack",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CheckCondition",
          "Params": [
            {
              "ParamName": "Condition",
              "Value": "CurrentArmor(Target) == \u0022HazmatSuit\u0022"
            }
          ],
          "OnFailure": {
            "EffectName": "CheckCondition",
            "Params": [
              {
                "ParamName": "Condition",
                "Value": "{target.Stat:PoisonResistance} \u003E 100"
              }
            ],
            "OnSuccess": {
              "EffectName": "ApplyAlteredStatus",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "Poisoned"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "Power",
                  "Value": "Ceiling({target.MaxHP} / 10, 0)"
                },
                {
                  "ParamName": "TurnLength",
                  "Value": "-1"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ]
            },
            "OnFailure": {
              "EffectName": "ApplyAlteredStatus",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "Poisoned"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "50"
                },
                {
                  "ParamName": "Power",
                  "Value": "Ceiling({target.MaxHP} / 10, 0)"
                },
                {
                  "ParamName": "TurnLength",
                  "Value": "-1"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ]
            }
          }
        }
      }
    }
  ],
  "CharacterStats": [
    {
      "Id": "HP",
      "Name": "CharacterHPStat",
      "StatType": "HP",
      "HasMax": true,
      "MinCap": 0,
      "MaxCap": 99999
    },
    {
      "Id": "HPRegeneration",
      "Name": "CharacterHPRegenerationStat",
      "StatType": "Regeneration",
      "HasMax": false,
      "RegeneratesStatId": "HP",
      "MinCap": 0,
      "MaxCap": 999
    },
    {
      "Id": "MP",
      "Name": "CharacterMPStat",
      "StatType": "MP",
      "HasMax": true,
      "MinCap": 0,
      "MaxCap": 99999
    },
    {
      "Id": "MPRegeneration",
      "Name": "CharacterMPRegenerationStat",
      "StatType": "Regeneration",
      "HasMax": false,
      "RegeneratesStatId": "MP",
      "MinCap": 0,
      "MaxCap": 999
    },
    {
      "Id": "Hunger",
      "Name": "CharacterHungerStat",
      "StatType": "Hunger",
      "HasMax": true,
      "MinCap": 0,
      "MaxCap": 99999
    },
    {
      "Id": "Attack",
      "Name": "CharacterAttackStat",
      "StatType": "Integer",
      "HasMax": false,
      "MinCap": 0,
      "MaxCap": 9999
    },
    {
      "Id": "Defense",
      "Name": "CharacterDefenseStat",
      "StatType": "Integer",
      "HasMax": false,
      "MinCap": 0,
      "MaxCap": 9999
    },
    {
      "Id": "Movement",
      "Name": "CharacterMovementStat",
      "StatType": "Integer",
      "HasMax": false,
      "MinCap": 0,
      "MaxCap": 9
    },
    {
      "Id": "Accuracy",
      "Name": "CharacterAccuracyStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": 0,
      "MaxCap": 200
    },
    {
      "Id": "Evasion",
      "Name": "CharacterEvasionStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": -100,
      "MaxCap": 100
    },
    {
      "Id": "WaterResistance",
      "Name": "CharacterWaterResistanceStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": -100,
      "MaxCap": 200
    },
    {
      "Id": "IceResistance",
      "Name": "CharacterIceResistanceStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": -100,
      "MaxCap": 200
    },
    {
      "Id": "FireResistance",
      "Name": "CharacterFireResistanceStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": -100,
      "MaxCap": 200
    },
    {
      "Id": "PoisonResistance",
      "Name": "CharacterPoisonResistanceStat",
      "StatType": "Percentage",
      "HasMax": false,
      "MinCap": -100,
      "MaxCap": 200
    }
  ],
  "PlayerClasses": [
    {
      "RequiresNamePrompt": true,
      "Faction": "PlayerFaction",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 18,
          "IncreasePerLevel": 2.5
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0.125,
          "IncreasePerLevel": 0.05
        },
        {
          "StatId": "MP",
          "Base": 10,
          "IncreasePerLevel": 1.0000
        },
        {
          "StatId": "MPRegeneration",
          "Base": 0.250,
          "IncreasePerLevel": 0.00750
        },
        {
          "StatId": "Attack",
          "Base": 4,
          "IncreasePerLevel": 1.25
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.5
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullMap",
      "InventorySize": 6,
      "StartingWeapon": "BareFists",
      "StartingArmor": "ClothArmor",
      "StartingInventory": [
        "Antidote",
        "AnkhOfResurrection",
        "Pistol",
        "LeatherArmor"
      ],
      "MaxLevel": 10,
      "CanGainExperience": true,
      "ExperienceToLevelUpFormula": "2 * level \u002B 8",
      "OnAttack": [],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ReplaceConsoleRepresentation",
          "Params": [
            {
              "ParamName": "ForeColor",
              "Value": "255,0,0,255"
            }
          ],
          "Then": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "PlayerDeathText"
              },
              {
                "ParamName": "color",
                "Value": "255,0,0,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "MessageBox",
              "Params": [
                {
                  "ParamName": "title",
                  "Value": "PlayerDeathMessageBoxHeader"
                },
                {
                  "ParamName": "text",
                  "Value": "PlayerDeathMessageBoxText"
                },
                {
                  "ParamName": "color",
                  "Value": "255,0,0,255"
                }
              ]
            }
          }
        }
      },
      "Id": "EasyPlayer",
      "Name": "EasyPlayerName",
      "Description": "EasyPlayerDescription",
      "ConsoleRepresentation": {
        "Character": "\u263A",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 124,
          "G": 252,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "RequiresNamePrompt": true,
      "Faction": "PlayerFaction",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 12,
          "IncreasePerLevel": 2
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0.075,
          "IncreasePerLevel": 0.025
        },
        {
          "StatId": "MP",
          "Base": 6,
          "IncreasePerLevel": 0.7500
        },
        {
          "StatId": "MPRegeneration",
          "Base": 0.1250,
          "IncreasePerLevel": 0.0750
        },
        {
          "StatId": "Hunger",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 2,
          "IncreasePerLevel": 1
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.34
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 4,
      "StartingWeapon": "BareFists",
      "StartingArmor": "ClothArmor",
      "StartingInventory": [
        "Sword"
      ],
      "MaxLevel": 10,
      "CanGainExperience": true,
      "ExperienceToLevelUpFormula": "(1/4) * (level ^ 3) \u002B 2 * level \u002B 8",
      "OnAttack": [],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ReplaceConsoleRepresentation",
          "Params": [
            {
              "ParamName": "ForeColor",
              "Value": "255,0,0,255"
            }
          ],
          "Then": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "PlayerDeathText"
              },
              {
                "ParamName": "color",
                "Value": "255,0,0,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "MessageBox",
              "Params": [
                {
                  "ParamName": "title",
                  "Value": "PlayerDeathMessageBoxHeader"
                },
                {
                  "ParamName": "text",
                  "Value": "PlayerDeathMessageBoxText"
                },
                {
                  "ParamName": "color",
                  "Value": "255,0,0,255"
                }
              ]
            }
          }
        }
      },
      "Id": "NormalPlayer",
      "Name": "NormalPlayerName",
      "Description": "NormalPlayerDescription",
      "ConsoleRepresentation": {
        "Character": "\u263A",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 124,
          "G": 252,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "RequiresNamePrompt": true,
      "Faction": "PlayerFaction",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 8,
          "IncreasePerLevel": 1.5
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0.025,
          "IncreasePerLevel": 0.0075
        },
        {
          "StatId": "Hunger",
          "Base": 75,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 1,
          "IncreasePerLevel": 0.75
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.26
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "6",
      "InventorySize": 2,
      "StartingWeapon": "BareFists",
      "StartingArmor": "ClothArmor",
      "StartingInventory": [],
      "MaxLevel": 8,
      "CanGainExperience": true,
      "ExperienceToLevelUpFormula": "(1/2) * (level ^ 3) \u002B (2/5) * (level ^ 2) \u002B 2 * level \u002B 8",
      "OnAttack": [],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ReplaceConsoleRepresentation",
          "Params": [
            {
              "ParamName": "ForeColor",
              "Value": "255,0,0,255"
            }
          ],
          "Then": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "PlayerDeathText"
              },
              {
                "ParamName": "color",
                "Value": "255,0,0,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "MessageBox",
              "Params": [
                {
                  "ParamName": "title",
                  "Value": "PlayerDeathMessageBoxHeader"
                },
                {
                  "ParamName": "text",
                  "Value": "PlayerDeathMessageBoxText"
                },
                {
                  "ParamName": "color",
                  "Value": "255,0,0,255"
                }
              ]
            }
          }
        }
      },
      "Id": "HardPlayer",
      "Name": "HardPlayerName",
      "Description": "HardPlayerDescription",
      "ConsoleRepresentation": {
        "Character": "\u263A",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 124,
          "G": 252,
          "B": 0,
          "A": 255
        }
      }
    }
  ],
  "NPCs": [
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": true,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "MeleeEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 4,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "BareFists",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 1,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 * Level",
      "ExperienceToLevelUpFormula": "",
      "OnAttack": [
        {
          "Id": "StickTongue",
          "Name": "StickTongue",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 3,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "{source.HP} / {source.MaxHP} \u003E 0.8",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "MeleeEnemyStickTongueText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ]
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "MeleeEnemy",
      "Name": "MeleeEnemyName",
      "Description": "MeleeEnemyDescription",
      "ConsoleRepresentation": {
        "Character": "m",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": true,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "RangedEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 4,
          "IncreasePerLevel": 2
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0.125
        },
        {
          "StatId": "Attack",
          "Base": 1,
          "IncreasePerLevel": 0.5
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.25
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "Javelin",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 10,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 \u002B Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "RangedEnemy",
      "Name": "RangedEnemyName",
      "Description": "RangedEnemyDescription",
      "ConsoleRepresentation": {
        "Character": "r",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": false,
      "PursuesOutOfSightCharacters": false,
      "WandersIfWithoutTarget": false,
      "OnSpawn": {
        "Id": "TurnStart",
        "Name": "TurnStart",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "[TurnCount] \u003E 1",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "Text",
              "Value": "ThiefSpawnText"
            },
            {
              "ParamName": "Color",
              "Value": "255,128,64,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "True"
            }
          ]
        }
      },
      "OnInteracted": [],
      "Faction": "MeleeEnemies",
      "StartsVisible": false,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 4,
          "IncreasePerLevel": 1
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0.125
        },
        {
          "StatId": "Attack",
          "Base": 0,
          "IncreasePerLevel": 0.5
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.25
        },
        {
          "StatId": "Movement",
          "Base": 2,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 5,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 2,
      "StartingWeapon": "BareFists",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 10,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "2 * Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [
        {
          "Id": "Steal",
          "Name": "Steal",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 5,
          "MaximumUses": 0,
          "TargetTypes": [
            "enemy"
          ],
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "ThiefStealAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "StealItem",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "40"
                },
                {
                  "ParamName": "canstealequippables",
                  "Value": "true"
                },
                {
                  "ParamName": "canstealconsumables",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ThiefStealSuccessText"
                  },
                  {
                    "ParamName": "color",
                    "Value": "255,0,0,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ThiefStealFailureText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        },
        {
          "Id": "SandAttack",
          "Name": "SandAttack",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 10,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "{target.Accuracy} \u003E 0",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 3,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "ThiefSandAttackText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "ApplyStatAlteration",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "SandAttackName"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Stat",
                  "Value": "accuracy"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                },
                {
                  "ParamName": "Amount",
                  "Value": "-15"
                },
                {
                  "ParamName": "TurnLength",
                  "Value": "20"
                },
                {
                  "ParamName": "CanBeStacked",
                  "Value": "True"
                },
                {
                  "ParamName": "DisplayOnLog",
                  "Value": "True"
                }
              ],
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "Thief",
      "Name": "ThiefName",
      "Description": "ThiefDescription",
      "ConsoleRepresentation": {
        "Character": "t",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": true,
      "WandersIfWithoutTarget": true,
      "OnSpawn": {
        "Id": "TurnStart",
        "Name": "TurnStart",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "SetFlag",
          "Params": [
            {
              "ParamName": "Key",
              "Value": "HasPotion_{Id}"
            },
            {
              "ParamName": "Value",
              "Value": "rng(0, 100)"
            },
            {
              "ParamName": "RemoveOnFloorChange",
              "Value": "True"
            }
          ]
        }
      },
      "OnInteracted": [
        {
          "Id": "WaveHandsName",
          "Name": "WaveHandsName",
          "Description": "WaveHandsDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 3,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Ally"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "SourceWaveHandText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "Text",
                  "Value": "TargetWaveHandText"
                },
                {
                  "ParamName": "Color",
                  "Value": "0,255,0,255"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      ],
      "Faction": "AlliedNPCs",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 4,
          "IncreasePerLevel": 1
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0.125
        },
        {
          "StatId": "Attack",
          "Base": 1,
          "IncreasePerLevel": 0.5
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.25
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "BareFists",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 10,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 * Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [
        {
          "Id": "DoNothing",
          "Name": "DoNothing",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 7,
          "MaximumUses": 1,
          "TargetTypes": [
            "enemy"
          ],
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "MeleeAllyDeclareText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ]
          }
        },
        {
          "Id": "GivePotion",
          "Name": "GivePotion",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 1,
          "TargetTypes": [
            "Ally"
          ],
          "UseCondition": "[HasPotion_{Id}] \u003C 33",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "GiveItem",
            "Params": [
              {
                "ParamName": "Source",
                "Value": "source"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Id",
                "Value": "HealingPotion"
              },
              {
                "ParamName": "FromInventory",
                "Value": "False"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "AllyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "255,30,30,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ]
            }
          }
        }
      },
      "Id": "MeleeAlly",
      "Name": "MeleeAllyName",
      "Description": "MeleeAllyDescription",
      "ConsoleRepresentation": {
        "Character": "m",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 124,
          "G": 252,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "AllOut",
      "KnowsAllCharacterPositions": false,
      "PursuesOutOfSightCharacters": false,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "MeleeEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 75,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0.025,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 2,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullMap",
      "InventorySize": 2,
      "StartingWeapon": "Sword",
      "StartingArmor": "SpikedArmor",
      "StartingInventory": [
        "Antidote",
        "HealingPotion"
      ],
      "MaxLevel": 1,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "0",
      "ExperienceToLevelUpFormula": "",
      "OnAttack": [
        {
          "Id": "DoNothing",
          "Name": "DoNothing",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 3,
          "MaximumRange": 15,
          "CooldownBetweenUses": 4,
          "MaximumUses": 1,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "{source.HP} / {source.MaxHP} \u003E 0.9",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "BossAwaitText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ]
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "BossDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,255,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GenerateStairs",
              "Params": [],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ],
                "Then": {
                  "EffectName": "MessageBox",
                  "Params": [
                    {
                      "ParamName": "Title",
                      "Value": "Floor5BossDefeatedHeader"
                    },
                    {
                      "ParamName": "Text",
                      "Value": "Floor5BossDefeatedText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "0,255,0,255"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Id": "Boss",
      "Name": "BossName",
      "Description": "BossDescription",
      "ConsoleRepresentation": {
        "Character": "B",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": false,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "AlliedNPCs",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 6,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 2,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": -10,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 0,
      "StartingWeapon": "Claws",
      "StartingArmor": "Unarmored",
      "StartingInventory": [],
      "MaxLevel": 1,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 * Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [],
      "OnDeath": {
        "Id": "Death",
        "Name": "Death",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "SummonedDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,128,255,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ]
          }
        }
      },
      "Id": "Lizard",
      "Name": "LizardName",
      "Description": "LizardDescription",
      "ConsoleRepresentation": {
        "Character": "l",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 128,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": false,
      "PursuesOutOfSightCharacters": false,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "MeleeEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 25,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0.025,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 2,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 15,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullMap",
      "InventorySize": 1,
      "StartingWeapon": "Pistol",
      "StartingArmor": "LeatherArmor",
      "StartingInventory": [],
      "MaxLevel": 1,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "0",
      "ExperienceToLevelUpFormula": "",
      "OnAttack": [
        {
          "Id": "DoNothing",
          "Name": "DoNothing",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 3,
          "MaximumRange": 15,
          "CooldownBetweenUses": 4,
          "MaximumUses": 1,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "{source.HP} / {source.MaxHP} \u003E 0.9",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "BossAwaitText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ]
          }
        }
      ],
      "OnDeath": {
        "Id": "Death",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "BossDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,255,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GenerateStairs",
              "Params": [],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "MiniBoss",
      "Name": "MiniBossName",
      "Description": "MiniBossDescription",
      "ConsoleRepresentation": {
        "Character": "B",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": false,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "MeleeEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 6,
          "IncreasePerLevel": 1.00000
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Attack",
          "Base": 2,
          "IncreasePerLevel": 0.50000
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.1000
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 200,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "BareFists",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 1,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "2 * Level",
      "ExperienceToLevelUpFormula": "",
      "OnAttack": [
        {
          "Id": "ThrowRottenMeat",
          "Name": "ThrowRottenMeatName",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 2,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "ThrowRottenMeatAttackText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "Attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "Defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "80"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "5"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2.5"
                },
                {
                  "ParamName": "Element",
                  "Value": "Poison"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            }
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "Skeleton",
      "Name": "SkeletonName",
      "Description": "SkeletonDescription",
      "ConsoleRepresentation": {
        "Character": "s",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "CostEfficient",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": true,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "RangedEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 9,
          "IncreasePerLevel": 2
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0.125
        },
        {
          "StatId": "MP",
          "Base": 8,
          "IncreasePerLevel": 2.00000
        },
        {
          "StatId": "MPRegeneration",
          "Base": 0.10000,
          "IncreasePerLevel": 0.02500
        },
        {
          "StatId": "Attack",
          "Base": 3,
          "IncreasePerLevel": 0.330000
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.25
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 10,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 10,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 10,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 10,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "MagicStaff",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 10,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 \u002B 2 * Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "Wizard",
      "Name": "WizardName",
      "Description": "WizardDescription",
      "ConsoleRepresentation": {
        "Character": "\u00C7",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "AIType": "Random",
      "KnowsAllCharacterPositions": true,
      "PursuesOutOfSightCharacters": true,
      "WandersIfWithoutTarget": true,
      "OnInteracted": [],
      "Faction": "RangedEnemies",
      "StartsVisible": true,
      "Stats": [
        {
          "StatId": "HP",
          "Base": 8,
          "IncreasePerLevel": 1.00000
        },
        {
          "StatId": "HPRegeneration",
          "Base": 0,
          "IncreasePerLevel": 0.125
        },
        {
          "StatId": "Attack",
          "Base": 4,
          "IncreasePerLevel": 0.330000
        },
        {
          "StatId": "Defense",
          "Base": 0,
          "IncreasePerLevel": 0.25
        },
        {
          "StatId": "Movement",
          "Base": 1,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Accuracy",
          "Base": 100,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "Evasion",
          "Base": 0,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "WaterResistance",
          "Base": 40,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "IceResistance",
          "Base": 20,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "FireResistance",
          "Base": 40,
          "IncreasePerLevel": 0
        },
        {
          "StatId": "PoisonResistance",
          "Base": 0,
          "IncreasePerLevel": 0
        }
      ],
      "BaseSightRange": "FullRoom",
      "InventorySize": 1,
      "StartingWeapon": "BareFists",
      "StartingArmor": "Skirt",
      "StartingInventory": [],
      "MaxLevel": 10,
      "CanGainExperience": false,
      "ExperiencePayoutFormula": "1 \u002B 2 * Level",
      "ExperienceToLevelUpFormula": "500",
      "OnAttack": [
        {
          "Id": "WaterJet",
          "Name": "WaterJetAttackName",
          "Description": "",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 2,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "WaterJetAttackText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "Attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "Defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "5"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2.5"
                },
                {
                  "ParamName": "Element",
                  "Value": "Water"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            }
          }
        }
      ],
      "OnDeath": {
        "Id": "PrintDeath",
        "Name": "PrintDeath",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "EnemyDeathText"
            },
            {
              "ParamName": "color",
              "Value": "0,180,0,255"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplaceConsoleRepresentation",
            "Params": [
              {
                "ParamName": "character",
                "Value": "\u00B1"
              }
            ],
            "Then": {
              "EffectName": "GiveExperience",
              "Params": [
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "amount",
                  "Value": "{this.experiencepayout}"
                }
              ],
              "Then": {
                "EffectName": "SetFlag",
                "Params": [
                  {
                    "ParamName": "Key",
                    "Value": "EnemiesDefeated"
                  },
                  {
                    "ParamName": "Value",
                    "Value": "[EnemiesDefeated] \u002B 1"
                  },
                  {
                    "ParamName": "RemoveOnFloorChange",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "WaterElemental",
      "Name": "WaterElementalName",
      "Description": "WaterElementalDescription",
      "ConsoleRepresentation": {
        "Character": "w",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    }
  ],
  "Items": [
    {
      "StartsVisible": true,
      "Power": "1d2",
      "EntityType": "Weapon",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "MeleeWeaponAttackName",
          "Name": "MeleeWeaponAttackName",
          "Description": "BareFistsAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "BareFistsAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "95"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "10"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "LookAtCoin",
          "Name": "LookAtCoinName",
          "Description": "LookAtCoinDescription",
          "IsScript": false,
          "MinimumRange": 0,
          "MaximumRange": 0,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Ally",
            "Enemy",
            "Self"
          ],
          "UseCondition": "true",
          "AIUseCondition": "false",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "SelectOption",
            "Params": [
              {
                "ParamName": "Title",
                "Value": "DungeonName"
              },
              {
                "ParamName": "Message",
                "Value": "SelectPromptText"
              },
              {
                "ParamName": "Cancellable",
                "Value": "False"
              },
              {
                "ParamName": "OptionFlag",
                "Value": "SelectedOption"
              },
              {
                "ParamName": "Color",
                "Value": "0,128,255,255"
              },
              {
                "ParamName": "Options",
                "Value": "Option1|ThrowCoinName"
              },
              {
                "ParamName": "Options",
                "Value": "Option2|GoForHeadsName"
              }
            ],
            "Then": {
              "EffectName": "CheckCondition",
              "Params": [
                {
                  "ParamName": "Condition",
                  "Value": "[SelectedOption] == \u0022Option1\u0022"
                }
              ],
              "OnSuccess": {
                "EffectName": "CallScript",
                "Params": [
                  {
                    "ParamName": "ScriptId",
                    "Value": "ThrowCoin"
                  }
                ]
              },
              "OnFailure": {
                "EffectName": "CallScript",
                "Params": [
                  {
                    "ParamName": "ScriptId",
                    "Value": "GoForHeads"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "BareFists",
      "Name": "BareFistsName",
      "Description": "BareFistsDescription",
      "ConsoleRepresentation": {
        "Character": "#",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "EntityType": "Armor",
      "StatModifiers": [],
      "OnAttack": [],
      "Id": "ClothArmor",
      "Name": "ClothArmorName",
      "Description": "ClothArmorDescription",
      "ConsoleRepresentation": {
        "Character": "\u2660",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "EntityType": "Armor",
      "StatModifiers": [],
      "OnAttack": [],
      "Id": "Skirt",
      "Name": "SkirtName",
      "Description": "SkirtDescription",
      "ConsoleRepresentation": {
        "Character": "\u2660",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "2d4",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "Heal",
        "Name": "Heal",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "{target.HP} \u003C {target.MaxHP}",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectDrunkText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "HealDamage",
            "Params": [
              {
                "ParamName": "source",
                "Value": "source"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "power",
                "Value": "{this.Power}"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "HealingPotion",
      "Name": "HealingPotionName",
      "Description": "HealingPotionDescription",
      "ConsoleRepresentation": {
        "Character": "V",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "ApplyInvigorated",
        "Name": "ApplyInvigorated",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectDrunkText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "id",
                "Value": "invigorated"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "power",
                "Value": "Ceiling({target.Attack} / 10, 1)"
              },
              {
                "ParamName": "turnlength",
                "Value": "75"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "PotionOfStrength",
      "Name": "PotionOfStrengthName",
      "Description": "PotionOfStrengthDescription",
      "ConsoleRepresentation": {
        "Character": "S",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "CurePoison",
        "Name": "CurePoison",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "HasStatus(target,Poisoned)",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectDrunkText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "CleanseAlteredStatus",
            "Params": [
              {
                "ParamName": "id",
                "Value": "poisoned"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "Antidote",
      "Name": "AntidoteName",
      "Description": "AntidoteDescription",
      "ConsoleRepresentation": {
        "Character": "A",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1d3",
      "EntityType": "Weapon",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "MeleeWeaponAttackName",
          "Name": "MeleeWeaponAttackName",
          "Description": "SwordAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "SwordAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "15"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "SwordAllInAttackName",
          "Name": "SwordAllInAttackName",
          "Description": "SwordAllInAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 4,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "SwordAllInAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "60"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "2*({source.Damage})"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "20"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        }
      ],
      "Id": "Sword",
      "Name": "SwordName",
      "Description": "SwordDescription",
      "ConsoleRepresentation": {
        "Character": "\u2191",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "2d3",
      "EntityType": "Weapon",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "MeleeWeaponAttackName",
          "Name": "MeleeWeaponAttackName",
          "Description": "PistolMeleeAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "PistolMeleeAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "95"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "({source.Damage}) / 2"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "5"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "RangedWeaponAttackName",
          "Name": "RangedWeaponAttackName",
          "Description": "PistolRangedAttackDescription",
          "IsScript": false,
          "MinimumRange": 2,
          "MaximumRange": 4,
          "CooldownBetweenUses": 3,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "PistolRangedAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "15"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 3"
                },
                {
                  "ParamName": "Element",
                  "Value": "Fire"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "True"
                }
              ]
            }
          }
        }
      ],
      "Id": "Pistol",
      "Name": "PistolName",
      "Description": "PistolDescription",
      "ConsoleRepresentation": {
        "Character": "\u00AC",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Armor",
      "StatModifiers": [],
      "OnAttack": [],
      "Id": "LeatherArmor",
      "Name": "LeatherName",
      "Description": "LeatherDescription",
      "ConsoleRepresentation": {
        "Character": "\u25D9",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "2",
      "EntityType": "Armor",
      "StatModifiers": [],
      "OnAttack": [],
      "Id": "PlateArmor",
      "Name": "PlateName",
      "Description": "PlateDescription",
      "ConsoleRepresentation": {
        "Character": "\u2666",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1d2",
      "EntityType": "Weapon",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "MeleeWeaponAttackName",
          "Name": "MeleeWeaponAttackName",
          "Description": "JavelinMeleeAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 2,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "JavelinMeleeAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "85"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "({source.Damage}) / 1.5"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "20"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "RangedWeaponAttackName",
          "Name": "RangedWeaponAttackName",
          "Description": "JavelinNormalRangedAttackDescription",
          "IsScript": false,
          "MinimumRange": 2,
          "MaximumRange": 3,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "JavelinNormalRangedAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "85"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "15"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "JavelinEnvenomedRangedAttackName",
          "Name": "JavelinEnvenomedRangedAttackName",
          "Description": "JavelinEnvenomedRangedAttackDescription",
          "IsScript": false,
          "MinimumRange": 2,
          "MaximumRange": 3,
          "CooldownBetweenUses": 5,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "JavelinEnvenomedRangedAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage} / 2"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "5"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Poison"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            }
          }
        }
      ],
      "Id": "Javelin",
      "Name": "JavelinName",
      "Description": "JavelinDescription",
      "ConsoleRepresentation": {
        "Character": "\u2195",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 128,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1d3",
      "EntityType": "Weapon",
      "StatModifiers": [
        {
          "Id": "HP",
          "Amount": -5
        }
      ],
      "OnAttack": [
        {
          "Id": "StaffOfMagusName",
          "Name": "StaffOfMagusName",
          "Description": "StaffOfMagusDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 1,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "StaffOfMagusAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage} / 2"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "10"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        },
        {
          "Id": "FireballName",
          "Name": "FireballName",
          "Description": "FireballDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 2,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 2,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "FireballAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage} \u002B 1"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "15"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2"
                },
                {
                  "ParamName": "Element",
                  "Value": "Fire"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            }
          }
        },
        {
          "Id": "IceballName",
          "Name": "IceballName",
          "Description": "IceballDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 3,
          "CooldownBetweenUses": 2,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 3,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "IceballAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "90"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage} - 1"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "10"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 3"
                },
                {
                  "ParamName": "Element",
                  "Value": "Ice"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "False"
                }
              ]
            }
          }
        },
        {
          "Id": "HealName",
          "Name": "HealName",
          "Description": "HealDescription",
          "IsScript": false,
          "MinimumRange": 0,
          "MaximumRange": 3,
          "CooldownBetweenUses": 3,
          "MaximumUses": 0,
          "TargetTypes": [
            "Ally",
            "Self"
          ],
          "UseCondition": "{target.HP} \u003C {target.MaxHP}",
          "MPCost": 4,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "HealAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "HealDamage",
              "Params": [
                {
                  "ParamName": "source",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "power",
                  "Value": "2d6"
                }
              ],
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "MagicStaff",
      "Name": "MagicStaffName",
      "Description": "MagicStaffDescription",
      "ConsoleRepresentation": {
        "Character": "\u2320",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "ScrollOfDestructionName",
          "Name": "ScrollOfDestructionName",
          "Description": "ScrollOfDestructionAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "{target.ClassId} != \u0022Boss\u0022 \u0026\u0026 {target.ClassId} != \u0022MiniBoss\u0022",
          "AIUseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": false,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "SelectYesNo",
            "Params": [
              {
                "ParamName": "Title",
                "Value": "DungeonName"
              },
              {
                "ParamName": "Message",
                "Value": "ImportantConsumableText"
              },
              {
                "ParamName": "YesButtonText",
                "Value": "YesButtonText"
              },
              {
                "ParamName": "NoButtonText",
                "Value": "NoButtonText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,0,255"
              }
            ],
            "OnSuccess": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ScrollOfDestructionAttackText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ],
              "Then": {
                "EffectName": "DealDamage",
                "Params": [
                  {
                    "ParamName": "accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "attacker",
                    "Value": "source"
                  },
                  {
                    "ParamName": "target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "attack",
                    "Value": "{target.MaxHP}"
                  },
                  {
                    "ParamName": "defense",
                    "Value": "0"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "False"
                  },
                  {
                    "ParamName": "CriticalHitChance",
                    "Value": "0"
                  },
                  {
                    "ParamName": "CriticalHitFormula",
                    "Value": "{CalculatedDamage}"
                  },
                  {
                    "ParamName": "Element",
                    "Value": "Normal"
                  },
                  {
                    "ParamName": "BypassesResistances",
                    "Value": "true"
                  },
                  {
                    "ParamName": "BypassesElementEffect",
                    "Value": "true"
                  }
                ],
                "OnSuccess": {
                  "EffectName": "Remove",
                  "Params": [
                    {
                      "ParamName": "Accuracy",
                      "Value": "100"
                    },
                    {
                      "ParamName": "target",
                      "Value": "this"
                    },
                    {
                      "ParamName": "BypassesAccuracyCheck",
                      "Value": "True"
                    }
                  ],
                  "OnSuccess": {
                    "EffectName": "PrintText",
                    "Params": [
                      {
                        "ParamName": "text",
                        "Value": "ObjectDisappearedText"
                      },
                      {
                        "ParamName": "BypassesVisibilityCheck",
                        "Value": "False"
                      }
                    ],
                    "Then": {
                      "EffectName": "EndTurn",
                      "Params": [
                        {
                          "ParamName": "Target",
                          "Value": "source"
                        },
                        {
                          "ParamName": "Accuracy",
                          "Value": "100"
                        },
                        {
                          "ParamName": "BypassesAccuracyCheck",
                          "Value": "True"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "Id": "ScrollOfDestruction",
      "Name": "ScrollOfDestructionName",
      "Description": "ScrollOfDestructionDescription",
      "ConsoleRepresentation": {
        "Character": "\u2261",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1d4",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "ItemUse",
        "Name": "ItemUse",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "{target.MP} \u003C {target.MaxMP}",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectDrunkText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ReplenishMP",
            "Params": [
              {
                "ParamName": "Source",
                "Value": "source"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Power",
                "Value": "{source.Power}"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Target",
                  "Value": "this"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "Text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "Color",
                  "Value": "255,255,255,255"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "MagicPotion",
      "Name": "MagicPotionName",
      "Description": "MagicPotionDescription",
      "ConsoleRepresentation": {
        "Character": "M",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "20",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "ItemUse",
        "Name": "ItemUse",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "DoesNotHaveStatus(target,Invisible)",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectDrunkText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "id",
                "Value": "Invisible"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "power",
                "Value": "0"
              },
              {
                "ParamName": "turnlength",
                "Value": "{this.Power}"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "InvisibilityPotion",
      "Name": "InvisibilityPotionName",
      "Description": "InvisibilityPotionDescription",
      "ConsoleRepresentation": {
        "Character": "I",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "DisarmedSpikeTrapName",
          "Name": "DisarmedSpikeTrapName",
          "Description": "DisarmedSpikeTrapDescription",
          "IsScript": false,
          "MinimumRange": 0,
          "MaximumRange": 0,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Tile"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "ObjectUsedText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "PlaceTrap",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "SpikeTrap"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "Remove",
                "Params": [
                  {
                    "ParamName": "Target",
                    "Value": "this"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "ObjectDisappearedText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ]
                }
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "DisarmedSpikeTrap",
      "Name": "DisarmedSpikeTrapName",
      "Description": "DisarmedSpikeTrapDescription",
      "ConsoleRepresentation": {
        "Character": "v",
        "BackgroundColor": {
          "R": 255,
          "G": 255,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "InstantWallName",
          "Name": "InstantWallName",
          "Description": "InstantWallDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Tile"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "ObjectUsedText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "TransformTile",
              "Params": [
                {
                  "ParamName": "TileType",
                  "Value": "Wall"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "Remove",
                "Params": [
                  {
                    "ParamName": "Target",
                    "Value": "this"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "ObjectDisappearedText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ]
                }
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "InstantWall",
      "Name": "InstantWallName",
      "Description": "InstantWallDescription",
      "ConsoleRepresentation": {
        "Character": "\u2588",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnDeath": {
        "Id": "Death",
        "Name": "Death",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ResetConsoleRepresentation",
          "Params": [],
          "Then": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "AnkhOfResurrectionUseText"
              },
              {
                "ParamName": "Color",
                "Value": "0,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "HealDamage",
              "Params": [
                {
                  "ParamName": "Source",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "source"
                },
                {
                  "ParamName": "Power",
                  "Value": "{source.MaxHP} / 2"
                }
              ],
              "Then": {
                "EffectName": "CleanseAllAlteredStatuses",
                "Params": [
                  {
                    "ParamName": "Target",
                    "Value": "source"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "CleanseStatAlterations",
                  "Params": [
                    {
                      "ParamName": "Accuracy",
                      "Value": "100"
                    },
                    {
                      "ParamName": "Target",
                      "Value": "source"
                    },
                    {
                      "ParamName": "BypassesAccuracyCheck",
                      "Value": "True"
                    }
                  ],
                  "Then": {
                    "EffectName": "Remove",
                    "Params": [
                      {
                        "ParamName": "Target",
                        "Value": "this"
                      },
                      {
                        "ParamName": "Accuracy",
                        "Value": "100"
                      },
                      {
                        "ParamName": "BypassesAccuracyCheck",
                        "Value": "True"
                      }
                    ],
                    "Then": {
                      "EffectName": "PrintText",
                      "Params": [
                        {
                          "ParamName": "Text",
                          "Value": "ObjectDisappearedText"
                        },
                        {
                          "ParamName": "Color",
                          "Value": "255,255,255,255"
                        },
                        {
                          "ParamName": "BypassesVisibilityCheck",
                          "Value": "False"
                        }
                      ],
                      "Then": {
                        "EffectName": "CheckCondition",
                        "Params": [
                          {
                            "ParamName": "Condition",
                            "Value": "{source.ClassId} == \u0022EasyPlayer\u0022 || {source.ClassId} == \u0022NormalPlayer\u0022 || {source.ClassId} == \u0022HardPlayer\u0022"
                          }
                        ],
                        "OnSuccess": {
                          "EffectName": "MessageBox",
                          "Params": [
                            {
                              "ParamName": "Title",
                              "Value": "AnkhOfResurrectionMessageBoxHeader"
                            },
                            {
                              "ParamName": "Text",
                              "Value": "AnkhOfResurrectionMessageBoxText"
                            },
                            {
                              "ParamName": "Color",
                              "Value": "0,255,255,255"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Id": "AnkhOfResurrection",
      "Name": "AnkhOfResurrectionName",
      "Description": "AnkhOfResurrectionDescription",
      "ConsoleRepresentation": {
        "Character": "\u002B",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1d3",
      "EntityType": "Weapon",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "MeleeWeaponAttackName",
          "Name": "MeleeWeaponAttackName",
          "Description": "BareFistsAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "ClawsAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "accuracy",
                  "Value": "95"
                },
                {
                  "ParamName": "attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "target",
                  "Value": "target"
                },
                {
                  "ParamName": "attack",
                  "Value": "{source.Damage}"
                },
                {
                  "ParamName": "defense",
                  "Value": "{target.Mitigation}"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "33"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "{CalculatedDamage} * 2.5"
                },
                {
                  "ParamName": "Element",
                  "Value": "Normal"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "true"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "true"
                }
              ]
            }
          }
        }
      ],
      "Id": "Claws",
      "Name": "ClawsName",
      "Description": "ClawsDescription",
      "ConsoleRepresentation": {
        "Character": "\u25B2",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "EntityType": "Armor",
      "StatModifiers": [],
      "OnAttack": [],
      "Id": "Unarmored",
      "Name": "UnarmoredName",
      "Description": "UnarmoredDescription",
      "ConsoleRepresentation": {
        "Character": "\u25AC",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "ScrollOfReanimationName",
          "Name": "ScrollOfReanimationName",
          "Description": "ScrollOfReanimationAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Tile"
          ],
          "UseCondition": "TileHasDeadAllies(source)",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "text",
                "Value": "ScrollOfReanimationAttackText"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              }
            ],
            "Then": {
              "EffectName": "ReviveNPC",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "Remove",
                "Params": [
                  {
                    "ParamName": "Target",
                    "Value": "this"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "ObjectDisappearedText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ]
                }
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "ScrollOfReanimation",
      "Name": "ScrollOfReanimationName",
      "Description": "ScrollOfReanimationDescription",
      "ConsoleRepresentation": {
        "Character": "\u2261",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "WandOfScalesName",
          "Name": "WandOfScalesName",
          "Description": "WandOfScalesAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 1,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Tile"
          ],
          "UseCondition": "TileIsOccupied() == false",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "WandOfScalesAttackText"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "SpawnNPC",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "Lizard"
                },
                {
                  "ParamName": "Level",
                  "Value": "1"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "Remove",
                "Params": [
                  {
                    "ParamName": "Target",
                    "Value": "this"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "ObjectDisappearedText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ]
                }
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "FailedAttackText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      ],
      "Id": "WandOfScales",
      "Name": "WandOfScalesName",
      "Description": "WandOfScalesDescription",
      "ConsoleRepresentation": {
        "Character": "\u250C",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "50",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [],
      "OnUse": {
        "Id": "ItemUse",
        "Name": "ItemUse",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "{target.Hunger} \u003C {target.MaxHunger}",
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectEatenText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            },
            {
              "ParamName": "Color",
              "Value": "255,255,255,255"
            }
          ],
          "Then": {
            "EffectName": "ReplenishHunger",
            "Params": [
              {
                "ParamName": "Source",
                "Value": "source"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Power",
                "Value": "{source.Power}"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Target",
                  "Value": "this"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "Text",
                  "Value": "ObjectNotUsedText"
                },
                {
                  "ParamName": "Color",
                  "Value": "255,255,255,255"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "Apple",
      "Name": "AppleName",
      "Description": "AppleDescription",
      "ConsoleRepresentation": {
        "Character": "\u03B4",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Armor",
      "StatModifiers": [
        {
          "Id": "Attack",
          "Amount": 1
        }
      ],
      "OnAttack": [],
      "Id": "SpikedArmor",
      "Name": "SpikedArmorName",
      "Description": "SpikedArmorDescription",
      "ConsoleRepresentation": {
        "Character": "*",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Armor",
      "StatModifiers": [
        {
          "Id": "PoisonResistance",
          "Amount": 50
        }
      ],
      "OnAttack": [],
      "Id": "HazmatSuit",
      "Name": "HazmatSuitName",
      "Description": "HazmatSuitDescription",
      "ConsoleRepresentation": {
        "Character": "\u00C6",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "EntityType": "Armor",
      "StatModifiers": [
        {
          "Id": "FireResistance",
          "Amount": 50
        },
        {
          "Id": "PoisonResistance",
          "Amount": -20
        }
      ],
      "OnAttack": [],
      "Id": "AsbestosSuit",
      "Name": "AsbestosSuitName",
      "Description": "AsbestosSuitDescription",
      "ConsoleRepresentation": {
        "Character": "\u03C6",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Armor",
      "StatModifiers": [
        {
          "Id": "WaterResistance",
          "Amount": 35
        },
        {
          "Id": "IceResistance",
          "Amount": 50
        },
        {
          "Id": "FireResistance",
          "Amount": -20
        }
      ],
      "OnAttack": [],
      "Id": "WoolenSuit",
      "Name": "WoolenSuitName",
      "Description": "WoolenSuitDescription",
      "ConsoleRepresentation": {
        "Character": "\u00A3",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "ToxicGrenadeAttack",
          "Name": "ToxicGrenadeName",
          "Description": "ToxicGrenadeAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "CharacterThrowsItem"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "Attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Attack",
                  "Value": "1"
                },
                {
                  "ParamName": "Defense",
                  "Value": "0"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "0"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "0"
                },
                {
                  "ParamName": "Element",
                  "Value": "Poison"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "ApplyAlteredStatus",
                "Params": [
                  {
                    "ParamName": "Id",
                    "Value": "Poisoned"
                  },
                  {
                    "ParamName": "Target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "Power",
                    "Value": "Ceiling({target.MaxHP} / 10, 0)"
                  },
                  {
                    "ParamName": "TurnLength",
                    "Value": "-1"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "Remove",
                  "Params": [
                    {
                      "ParamName": "Target",
                      "Value": "this"
                    },
                    {
                      "ParamName": "Accuracy",
                      "Value": "100"
                    },
                    {
                      "ParamName": "BypassesAccuracyCheck",
                      "Value": "True"
                    }
                  ],
                  "Then": {
                    "EffectName": "PrintText",
                    "Params": [
                      {
                        "ParamName": "Text",
                        "Value": "ObjectDisappearedText"
                      },
                      {
                        "ParamName": "Color",
                        "Value": "255,255,255,255"
                      },
                      {
                        "ParamName": "BypassesVisibilityCheck",
                        "Value": "False"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ],
      "Id": "ToxicGrenade",
      "Name": "ToxicGrenadeName",
      "Description": "ToxicGrenadeDescription",
      "ConsoleRepresentation": {
        "Character": "@",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "1",
      "EntityType": "Consumable",
      "StatModifiers": [],
      "OnAttack": [
        {
          "Id": "WaterBalloonAttack",
          "Name": "WaterBalloonName",
          "Description": "WaterBalloonAttackDescription",
          "IsScript": false,
          "MinimumRange": 1,
          "MaximumRange": 2,
          "CooldownBetweenUses": 0,
          "MaximumUses": 0,
          "TargetTypes": [
            "Enemy"
          ],
          "UseCondition": "",
          "MPCost": 0,
          "FinishesTurnWhenUsed": true,
          "StartingCooldown": 0,
          "Effect": {
            "EffectName": "PrintText",
            "Params": [
              {
                "ParamName": "Text",
                "Value": "CharacterThrowsItem"
              },
              {
                "ParamName": "Color",
                "Value": "255,255,255,255"
              },
              {
                "ParamName": "BypassesVisibilityCheck",
                "Value": "False"
              }
            ],
            "Then": {
              "EffectName": "DealDamage",
              "Params": [
                {
                  "ParamName": "Attacker",
                  "Value": "source"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Attack",
                  "Value": "1"
                },
                {
                  "ParamName": "Defense",
                  "Value": "0"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "False"
                },
                {
                  "ParamName": "CriticalHitChance",
                  "Value": "0"
                },
                {
                  "ParamName": "CriticalHitFormula",
                  "Value": "0"
                },
                {
                  "ParamName": "Element",
                  "Value": "Water"
                },
                {
                  "ParamName": "BypassesResistances",
                  "Value": "False"
                },
                {
                  "ParamName": "BypassesElementEffect",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "ApplyAlteredStatus",
                "Params": [
                  {
                    "ParamName": "Id",
                    "Value": "Wet"
                  },
                  {
                    "ParamName": "Target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "Power",
                    "Value": "0"
                  },
                  {
                    "ParamName": "TurnLength",
                    "Value": "3"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  }
                ],
                "Then": {
                  "EffectName": "Remove",
                  "Params": [
                    {
                      "ParamName": "Target",
                      "Value": "this"
                    },
                    {
                      "ParamName": "Accuracy",
                      "Value": "100"
                    },
                    {
                      "ParamName": "BypassesAccuracyCheck",
                      "Value": "True"
                    }
                  ],
                  "Then": {
                    "EffectName": "PrintText",
                    "Params": [
                      {
                        "ParamName": "Text",
                        "Value": "ObjectDisappearedText"
                      },
                      {
                        "ParamName": "Color",
                        "Value": "255,255,255,255"
                      },
                      {
                        "ParamName": "BypassesVisibilityCheck",
                        "Value": "False"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ],
      "Id": "WaterBalloon",
      "Name": "WaterBalloonName",
      "Description": "WaterBalloonDescription",
      "ConsoleRepresentation": {
        "Character": "\u2022",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    }
  ],
  "Traps": [
    {
      "StartsVisible": false,
      "Power": "1",
      "OnStepped": {
        "Id": "TrapActivate",
        "Name": "TrapActivate",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectSteppedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "DealDamage",
            "Params": [
              {
                "ParamName": "accuracy",
                "Value": "80"
              },
              {
                "ParamName": "attacker",
                "Value": "source"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "attack",
                "Value": "{this.Power}"
              },
              {
                "ParamName": "defense",
                "Value": "0"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              },
              {
                "ParamName": "CriticalHitChance",
                "Value": "0"
              },
              {
                "ParamName": "CriticalHitFormula",
                "Value": "{CalculatedDamage}"
              },
              {
                "ParamName": "Element",
                "Value": "Normal"
              },
              {
                "ParamName": "BypassesResistances",
                "Value": "true"
              },
              {
                "ParamName": "BypassesElementEffect",
                "Value": "true"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "40"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "SpikeTrap",
      "Name": "SpikeTrapName",
      "Description": "SpikeTrapDescription",
      "ConsoleRepresentation": {
        "Character": "^",
        "BackgroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 255,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": true,
      "Power": "0",
      "OnStepped": {
        "Id": "TrapActivate",
        "Name": "TrapActivate",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectSteppedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "CleanseStatAlterations",
            "Params": [
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "WonderTileFailedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "WonderTile",
      "Name": "WonderTileName",
      "Description": "WonderTileDescription",
      "ConsoleRepresentation": {
        "Character": "\u2191",
        "BackgroundColor": {
          "R": 54,
          "G": 54,
          "B": 54,
          "A": 255
        },
        "ForegroundColor": {
          "R": 40,
          "G": 184,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "OnStepped": {
        "Id": "TrapActivate",
        "Name": "TrapActivate",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectSteppedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "id",
                "Value": "frozen"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "40"
              },
              {
                "ParamName": "power",
                "Value": "0"
              },
              {
                "ParamName": "turnlength",
                "Value": "4"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotActivatedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "IceTrap",
      "Name": "IceTrapName",
      "Description": "IceTrapDescription",
      "ConsoleRepresentation": {
        "Character": "\u263C",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 128,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "OnStepped": {
        "Id": "TrapActivate",
        "Name": "TrapActivate",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectSteppedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "Teleport",
            "Params": [
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "15"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "TeleportTrap",
      "Name": "TeleportTrapName",
      "Description": "TeleportTrapDescription",
      "ConsoleRepresentation": {
        "Character": "\u25B2",
        "BackgroundColor": {
          "R": 54,
          "G": 54,
          "B": 54,
          "A": 255
        },
        "ForegroundColor": {
          "R": 180,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "StartsVisible": false,
      "Power": "0",
      "OnStepped": {
        "Id": "Stepped",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "ObjectSteppedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ApplyAlteredStatus",
            "Params": [
              {
                "ParamName": "id",
                "Value": "Poisoned"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "Accuracy",
                "Value": "60"
              },
              {
                "ParamName": "power",
                "Value": "0"
              },
              {
                "ParamName": "turnlength",
                "Value": "-1"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ],
            "OnSuccess": {
              "EffectName": "Remove",
              "Params": [
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "target",
                  "Value": "this"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                }
              ],
              "OnSuccess": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "text",
                    "Value": "ObjectDisappearedText"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ]
              }
            },
            "OnFailure": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "text",
                  "Value": "ObjectNotActivatedText"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ]
            }
          }
        }
      },
      "Id": "ToxicTrap",
      "Name": "ToxicTrapName",
      "Description": "ToxicTrapDescription",
      "ConsoleRepresentation": {
        "Character": "\u2663",
        "BackgroundColor": {
          "R": 0,
          "G": 128,
          "B": 64,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 0,
          "A": 255
        }
      }
    }
  ],
  "AlteredStatuses": [
    {
      "CanStack": false,
      "CanOverwrite": false,
      "CleanseOnFloorChange": false,
      "CleansedByCleanseActions": true,
      "OnApply": {
        "Id": "Buff",
        "Name": "Buff",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ApplyStatAlteration",
          "Params": [
            {
              "ParamName": "id",
              "Value": "{this}"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "stat",
              "Value": "attack"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "amount",
              "Value": "{this.Power}"
            },
            {
              "ParamName": "turnlength",
              "Value": "{this.TurnLength}"
            },
            {
              "ParamName": "displayonlog",
              "Value": "true"
            },
            {
              "ParamName": "canbestacked",
              "Value": "true"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "Id": "Invigorated",
      "Name": "InvigoratedName",
      "Description": "InvigoratedDescription",
      "ConsoleRepresentation": {
        "Character": "\u2191",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "OnTurnStart": {
        "Id": "TurnStart",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 28,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 28,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "PoisonedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "DealDamage",
            "Params": [
              {
                "ParamName": "accuracy",
                "Value": "100"
              },
              {
                "ParamName": "attacker",
                "Value": "source"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "attack",
                "Value": "{this.Power}"
              },
              {
                "ParamName": "defense",
                "Value": "0"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              },
              {
                "ParamName": "CriticalHitChance",
                "Value": "0"
              },
              {
                "ParamName": "CriticalHitFormula",
                "Value": "{CalculatedDamage}"
              },
              {
                "ParamName": "Element",
                "Value": "Poison"
              },
              {
                "ParamName": "BypassesResistances",
                "Value": "False"
              },
              {
                "ParamName": "BypassesElementEffect",
                "Value": "True"
              }
            ]
          }
        }
      },
      "CanStack": false,
      "CanOverwrite": true,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": true,
      "Id": "Poisoned",
      "Name": "PoisonedName",
      "Description": "PoisonedDescription",
      "ConsoleRepresentation": {
        "Character": "\u203C",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "OnTurnStart": {
        "Id": "TurnStart",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 5,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 5,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "BurnedText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "DealDamage",
            "Params": [
              {
                "ParamName": "accuracy",
                "Value": "100"
              },
              {
                "ParamName": "attacker",
                "Value": "source"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "attack",
                "Value": "{this.Power}"
              },
              {
                "ParamName": "defense",
                "Value": "0"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              },
              {
                "ParamName": "CriticalHitChance",
                "Value": "0"
              },
              {
                "ParamName": "CriticalHitFormula",
                "Value": "{CalculatedDamage}"
              },
              {
                "ParamName": "Element",
                "Value": "Fire"
              },
              {
                "ParamName": "BypassesResistances",
                "Value": "False"
              },
              {
                "ParamName": "BypassesElementEffect",
                "Value": "True"
              }
            ]
          }
        }
      },
      "CanStack": false,
      "CanOverwrite": true,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": true,
      "OnApply": {
        "Id": "RemoveFreeze",
        "Name": "RemoveFreeze",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "id",
              "Value": "frozen"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "Id": "Burning",
      "Name": "BurningName",
      "Description": "BurningDescription",
      "ConsoleRepresentation": {
        "Character": "F",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "OnTurnStart": {
        "Id": "Freeze",
        "Name": "Freeze",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "PrintText",
          "Params": [
            {
              "ParamName": "text",
              "Value": "FrozenText"
            },
            {
              "ParamName": "BypassesVisibilityCheck",
              "Value": "False"
            }
          ],
          "Then": {
            "EffectName": "ForceSkipTurn",
            "Params": [
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      },
      "CanStack": false,
      "CanOverwrite": true,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": true,
      "OnApply": {
        "Id": "RemoveBurn",
        "Name": "RemoveBurn",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "id",
              "Value": "burning"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "ForceSkipTurn",
            "Params": [
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "target",
                "Value": "target"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              }
            ]
          }
        }
      },
      "Id": "Frozen",
      "Name": "FrozenName",
      "Description": "FrozenDescription",
      "ConsoleRepresentation": {
        "Character": "\u263C",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 0,
          "B": 255,
          "A": 255
        }
      }
    },
    {
      "CanStack": false,
      "CanOverwrite": true,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": false,
      "OnApply": {
        "Id": "Nerf",
        "Name": "Nerf",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "MPCost": 0,
        "FinishesTurnWhenUsed": true,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ApplyStatAlteration",
          "Params": [
            {
              "ParamName": "id",
              "Value": "{this}"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "stat",
              "Value": "hpregeneration"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "amount",
              "Value": "-{target.hpregeneration}"
            },
            {
              "ParamName": "turnlength",
              "Value": "-1"
            },
            {
              "ParamName": "displayonlog",
              "Value": "false"
            },
            {
              "ParamName": "canbestacked",
              "Value": "true"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "Id": "RegenBlock",
      "Name": "RegenBlockName",
      "Description": "RegenBlockDescription",
      "ConsoleRepresentation": {
        "Character": "X",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 255,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "OnAttacked": {
        "Id": "OnAttacked",
        "Name": "OnAttacked",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "Id",
              "Value": "Invisible"
            },
            {
              "ParamName": "Target",
              "Value": "source"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "CanStack": false,
      "CanOverwrite": false,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": true,
      "OnApply": {
        "Id": "StatusApply",
        "Name": "StatusApply",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ToggleVisibility",
          "Params": [
            {
              "ParamName": "Target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "OnRemove": {
        "Id": "OnRemove",
        "Name": "OnRemove",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "ToggleVisibility",
          "Params": [
            {
              "ParamName": "Target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "BeforeAttack": {
        "Id": "BeforeAttack",
        "Name": "BeforeAttack",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "Id",
              "Value": "Invisible"
            },
            {
              "ParamName": "Target",
              "Value": "source"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ]
        }
      },
      "Id": "Invisible",
      "Name": "InvisibleName",
      "Description": "InvisibleDescription",
      "ConsoleRepresentation": {
        "Character": "I",
        "BackgroundColor": {
          "R": 0,
          "G": 255,
          "B": 255,
          "A": 255
        },
        "ForegroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        }
      }
    },
    {
      "CanStack": false,
      "CanOverwrite": false,
      "CleanseOnFloorChange": true,
      "CleansedByCleanseActions": true,
      "OnApply": {
        "Id": "StatusApply",
        "Name": "",
        "Description": "",
        "IsScript": false,
        "MinimumRange": 0,
        "MaximumRange": 0,
        "CooldownBetweenUses": 0,
        "MaximumUses": 0,
        "TargetTypes": [],
        "UseCondition": "",
        "MPCost": 0,
        "FinishesTurnWhenUsed": false,
        "StartingCooldown": 0,
        "Effect": {
          "EffectName": "CleanseAlteredStatus",
          "Params": [
            {
              "ParamName": "id",
              "Value": "burning"
            },
            {
              "ParamName": "target",
              "Value": "target"
            },
            {
              "ParamName": "Accuracy",
              "Value": "100"
            },
            {
              "ParamName": "BypassesAccuracyCheck",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "ApplyStatAlteration",
            "Params": [
              {
                "ParamName": "Id",
                "Value": "{this}"
              },
              {
                "ParamName": "Target",
                "Value": "target"
              },
              {
                "ParamName": "Stat",
                "Value": "FireResistance"
              },
              {
                "ParamName": "Accuracy",
                "Value": "100"
              },
              {
                "ParamName": "BypassesAccuracyCheck",
                "Value": "True"
              },
              {
                "ParamName": "Amount",
                "Value": "40"
              },
              {
                "ParamName": "TurnLength",
                "Value": "{this.TurnLength}"
              },
              {
                "ParamName": "CanBeStacked",
                "Value": "False"
              },
              {
                "ParamName": "DisplayOnLog",
                "Value": "True"
              }
            ],
            "Then": {
              "EffectName": "ApplyStatAlteration",
              "Params": [
                {
                  "ParamName": "Id",
                  "Value": "{this}"
                },
                {
                  "ParamName": "Target",
                  "Value": "target"
                },
                {
                  "ParamName": "Stat",
                  "Value": "WaterResistance"
                },
                {
                  "ParamName": "Accuracy",
                  "Value": "100"
                },
                {
                  "ParamName": "BypassesAccuracyCheck",
                  "Value": "True"
                },
                {
                  "ParamName": "Amount",
                  "Value": "-20"
                },
                {
                  "ParamName": "TurnLength",
                  "Value": "{this.TurnLength}"
                },
                {
                  "ParamName": "CanBeStacked",
                  "Value": "False"
                },
                {
                  "ParamName": "DisplayOnLog",
                  "Value": "True"
                }
              ],
              "Then": {
                "EffectName": "ApplyStatAlteration",
                "Params": [
                  {
                    "ParamName": "Id",
                    "Value": "{this}"
                  },
                  {
                    "ParamName": "Target",
                    "Value": "target"
                  },
                  {
                    "ParamName": "Stat",
                    "Value": "IceResistance"
                  },
                  {
                    "ParamName": "Accuracy",
                    "Value": "100"
                  },
                  {
                    "ParamName": "BypassesAccuracyCheck",
                    "Value": "True"
                  },
                  {
                    "ParamName": "Amount",
                    "Value": "-20"
                  },
                  {
                    "ParamName": "TurnLength",
                    "Value": "{this.TurnLength}"
                  },
                  {
                    "ParamName": "CanBeStacked",
                    "Value": "False"
                  },
                  {
                    "ParamName": "DisplayOnLog",
                    "Value": "True"
                  }
                ]
              }
            }
          }
        }
      },
      "Id": "Wet",
      "Name": "WetName",
      "Description": "WetDescription",
      "ConsoleRepresentation": {
        "Character": "\u2248",
        "BackgroundColor": {
          "R": 0,
          "G": 0,
          "B": 0,
          "A": 255
        },
        "ForegroundColor": {
          "R": 128,
          "G": 128,
          "B": 255,
          "A": 255
        }
      }
    }
  ],
  "Scripts": [
    {
      "Id": "LOL",
      "Name": "a",
      "Description": "b",
      "IsScript": true,
      "MinimumRange": 0,
      "MaximumRange": 0,
      "CooldownBetweenUses": 0,
      "MaximumUses": 0,
      "TargetTypes": [
        "Ally",
        "Enemy",
        "Self"
      ],
      "UseCondition": "",
      "AIUseCondition": "",
      "MPCost": 0,
      "FinishesTurnWhenUsed": false,
      "StartingCooldown": 0,
      "Effect": {
        "EffectName": "PrintText",
        "Params": [
          {
            "ParamName": "Text",
            "Value": "LOL"
          },
          {
            "ParamName": "Color",
            "Value": "255,255,255,255"
          },
          {
            "ParamName": "BypassesVisibilityCheck",
            "Value": "False"
          }
        ]
      }
    },
    {
      "Id": "ThrowCoin",
      "Name": "ThrowCoinName",
      "Description": "ThrowCoinDescription",
      "IsScript": false,
      "MinimumRange": 0,
      "MaximumRange": 0,
      "CooldownBetweenUses": 0,
      "MaximumUses": 0,
      "TargetTypes": [
        "Self"
      ],
      "UseCondition": "",
      "AIUseCondition": "",
      "MPCost": 0,
      "FinishesTurnWhenUsed": true,
      "StartingCooldown": 0,
      "Effect": {
        "EffectName": "SetFlag",
        "Params": [
          {
            "ParamName": "Key",
            "Value": "CoinAmount"
          },
          {
            "ParamName": "Value",
            "Value": "rng(1,10)"
          },
          {
            "ParamName": "RemoveOnFloorChange",
            "Value": "True"
          }
        ],
        "Then": {
          "EffectName": "SetFlag",
          "Params": [
            {
              "ParamName": "Key",
              "Value": "HeadsAmount"
            },
            {
              "ParamName": "Value",
              "Value": "0"
            },
            {
              "ParamName": "RemoveOnFloorChange",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "SetFlag",
            "Params": [
              {
                "ParamName": "Key",
                "Value": "TailsAmount"
              },
              {
                "ParamName": "Value",
                "Value": "0"
              },
              {
                "ParamName": "RemoveOnFloorChange",
                "Value": "True"
              }
            ],
            "Then": {
              "EffectName": "PrintText",
              "Params": [
                {
                  "ParamName": "Text",
                  "Value": "ThrowCoinActionText"
                },
                {
                  "ParamName": "Color",
                  "Value": "255,255,255,255"
                },
                {
                  "ParamName": "BypassesVisibilityCheck",
                  "Value": "False"
                }
              ],
              "Then": {
                "EffectName": "For",
                "Params": [
                  {
                    "ParamName": "CounterFlagKey",
                    "Value": "i"
                  },
                  {
                    "ParamName": "InitialValue",
                    "Value": "1"
                  },
                  {
                    "ParamName": "EndValue",
                    "Value": "[CoinAmount]"
                  },
                  {
                    "ParamName": "Increment",
                    "Value": "1"
                  }
                ],
                "OnSuccess": {
                  "EffectName": "CheckCondition",
                  "Params": [
                    {
                      "ParamName": "Condition",
                      "Value": "rng(1,100) \u003C= 50"
                    }
                  ],
                  "OnSuccess": {
                    "EffectName": "SetFlag",
                    "Params": [
                      {
                        "ParamName": "Key",
                        "Value": "HeadsAmount"
                      },
                      {
                        "ParamName": "Value",
                        "Value": "[HeadsAmount] \u002B 1"
                      },
                      {
                        "ParamName": "RemoveOnFloorChange",
                        "Value": "True"
                      }
                    ],
                    "Then": {
                      "EffectName": "PrintText",
                      "Params": [
                        {
                          "ParamName": "Text",
                          "Value": "GotHeadsText"
                        },
                        {
                          "ParamName": "Color",
                          "Value": "255,255,255,255"
                        },
                        {
                          "ParamName": "BypassesVisibilityCheck",
                          "Value": "False"
                        }
                      ]
                    }
                  },
                  "OnFailure": {
                    "EffectName": "SetFlag",
                    "Params": [
                      {
                        "ParamName": "Key",
                        "Value": "TailsAmount"
                      },
                      {
                        "ParamName": "Value",
                        "Value": "[TailsAmount] \u002B 1"
                      },
                      {
                        "ParamName": "RemoveOnFloorChange",
                        "Value": "True"
                      }
                    ],
                    "Then": {
                      "EffectName": "PrintText",
                      "Params": [
                        {
                          "ParamName": "Text",
                          "Value": "GotTailsText"
                        },
                        {
                          "ParamName": "Color",
                          "Value": "255,255,255,255"
                        },
                        {
                          "ParamName": "BypassesVisibilityCheck",
                          "Value": "False"
                        }
                      ]
                    }
                  }
                },
                "OnFailure": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "AllCoinsThrownText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ],
                  "Then": {
                    "EffectName": "PrintText",
                    "Params": [
                      {
                        "ParamName": "Text",
                        "Value": "HeadsThrownText"
                      },
                      {
                        "ParamName": "Color",
                        "Value": "255,255,255,255"
                      },
                      {
                        "ParamName": "BypassesVisibilityCheck",
                        "Value": "False"
                      }
                    ],
                    "Then": {
                      "EffectName": "PrintText",
                      "Params": [
                        {
                          "ParamName": "Text",
                          "Value": "TailsThrownText"
                        },
                        {
                          "ParamName": "Color",
                          "Value": "255,255,255,255"
                        },
                        {
                          "ParamName": "BypassesVisibilityCheck",
                          "Value": "False"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "Id": "GoForHeads",
      "Name": "GoForHeadsName",
      "Description": "GoForHeadsDescription",
      "IsScript": false,
      "MinimumRange": 0,
      "MaximumRange": 0,
      "CooldownBetweenUses": 0,
      "MaximumUses": 0,
      "TargetTypes": [
        "Self"
      ],
      "UseCondition": "",
      "AIUseCondition": "",
      "MPCost": 0,
      "FinishesTurnWhenUsed": true,
      "StartingCooldown": 0,
      "Effect": {
        "EffectName": "PrintText",
        "Params": [
          {
            "ParamName": "Text",
            "Value": "GoForHeadsActionText"
          },
          {
            "ParamName": "Color",
            "Value": "255,255,255,255"
          },
          {
            "ParamName": "BypassesVisibilityCheck",
            "Value": "False"
          }
        ],
        "Then": {
          "EffectName": "SetFlag",
          "Params": [
            {
              "ParamName": "Key",
              "Value": "HeadsAmount"
            },
            {
              "ParamName": "Value",
              "Value": "0"
            },
            {
              "ParamName": "RemoveOnFloorChange",
              "Value": "True"
            }
          ],
          "Then": {
            "EffectName": "SetFlag",
            "Params": [
              {
                "ParamName": "Key",
                "Value": "TailsAmount"
              },
              {
                "ParamName": "Value",
                "Value": "0"
              },
              {
                "ParamName": "RemoveOnFloorChange",
                "Value": "True"
              }
            ],
            "Then": {
              "EffectName": "While",
              "Params": [
                {
                  "ParamName": "Condition",
                  "Value": "[TailsAmount] == 0"
                }
              ],
              "OnSuccess": {
                "EffectName": "CheckCondition",
                "Params": [
                  {
                    "ParamName": "Condition",
                    "Value": "rng(1,100) \u003C= 50"
                  }
                ],
                "OnSuccess": {
                  "EffectName": "SetFlag",
                  "Params": [
                    {
                      "ParamName": "Key",
                      "Value": "HeadsAmount"
                    },
                    {
                      "ParamName": "Value",
                      "Value": "[HeadsAmount] \u002B 1"
                    },
                    {
                      "ParamName": "RemoveOnFloorChange",
                      "Value": "True"
                    }
                  ],
                  "Then": {
                    "EffectName": "PrintText",
                    "Params": [
                      {
                        "ParamName": "Text",
                        "Value": "GotHeadsText"
                      },
                      {
                        "ParamName": "Color",
                        "Value": "255,255,255,255"
                      },
                      {
                        "ParamName": "BypassesVisibilityCheck",
                        "Value": "False"
                      }
                    ]
                  }
                },
                "OnFailure": {
                  "EffectName": "SetFlag",
                  "Params": [
                    {
                      "ParamName": "Key",
                      "Value": "TailsAmount"
                    },
                    {
                      "ParamName": "Value",
                      "Value": "[TailsAmount] \u002B 1"
                    },
                    {
                      "ParamName": "RemoveOnFloorChange",
                      "Value": "True"
                    }
                  ]
                }
              },
              "OnFailure": {
                "EffectName": "PrintText",
                "Params": [
                  {
                    "ParamName": "Text",
                    "Value": "GoForHeadsEndText"
                  },
                  {
                    "ParamName": "Color",
                    "Value": "255,255,255,255"
                  },
                  {
                    "ParamName": "BypassesVisibilityCheck",
                    "Value": "False"
                  }
                ],
                "Then": {
                  "EffectName": "PrintText",
                  "Params": [
                    {
                      "ParamName": "Text",
                      "Value": "HeadsThrownText"
                    },
                    {
                      "ParamName": "Color",
                      "Value": "255,255,255,255"
                    },
                    {
                      "ParamName": "BypassesVisibilityCheck",
                      "Value": "False"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ]
}